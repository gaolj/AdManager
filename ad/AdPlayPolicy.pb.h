// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: AdPlayPolicy.proto

#ifndef PROTOBUF_AdPlayPolicy_2eproto__INCLUDED
#define PROTOBUF_AdPlayPolicy_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3002000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3002000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
class Ad;
class AdDefaultTypeInternal;
extern AdDefaultTypeInternal _Ad_default_instance_;
class AdPlayPolicy;
class AdPlayPolicyDefaultTypeInternal;
extern AdPlayPolicyDefaultTypeInternal _AdPlayPolicy_default_instance_;
class AdPlayPolicy_AdPlay;
class AdPlayPolicy_AdPlayDefaultTypeInternal;
extern AdPlayPolicy_AdPlayDefaultTypeInternal _AdPlayPolicy_AdPlay_default_instance_;
class AdPlayPolicy_AdPlay_PlayTime;
class AdPlayPolicy_AdPlay_PlayTimeDefaultTypeInternal;
extern AdPlayPolicy_AdPlay_PlayTimeDefaultTypeInternal _AdPlayPolicy_AdPlay_PlayTime_default_instance_;
class Result;
class ResultDefaultTypeInternal;
extern ResultDefaultTypeInternal _Result_default_instance_;

namespace protobuf_AdPlayPolicy_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_AdPlayPolicy_2eproto

// ===================================================================

class Result : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Result) */ {
 public:
  Result();
  virtual ~Result();

  Result(const Result& from);

  inline Result& operator=(const Result& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Result& default_instance();

  static inline const Result* internal_default_instance() {
    return reinterpret_cast<const Result*>(
               &_Result_default_instance_);
  }

  void Swap(Result* other);

  // implements Message ----------------------------------------------

  inline Result* New() const PROTOBUF_FINAL { return New(NULL); }

  Result* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Result& from);
  void MergeFrom(const Result& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Result* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Ad ads = 1;
  int ads_size() const;
  void clear_ads();
  static const int kAdsFieldNumber = 1;
  const ::Ad& ads(int index) const;
  ::Ad* mutable_ads(int index);
  ::Ad* add_ads();
  ::google::protobuf::RepeatedPtrField< ::Ad >*
      mutable_ads();
  const ::google::protobuf::RepeatedPtrField< ::Ad >&
      ads() const;

  // @@protoc_insertion_point(class_scope:Result)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::Ad > ads_;
  mutable int _cached_size_;
  friend struct  protobuf_AdPlayPolicy_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Ad : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Ad) */ {
 public:
  Ad();
  virtual ~Ad();

  Ad(const Ad& from);

  inline Ad& operator=(const Ad& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Ad& default_instance();

  static inline const Ad* internal_default_instance() {
    return reinterpret_cast<const Ad*>(
               &_Ad_default_instance_);
  }

  void Swap(Ad* other);

  // implements Message ----------------------------------------------

  inline Ad* New() const PROTOBUF_FINAL { return New(NULL); }

  Ad* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Ad& from);
  void MergeFrom(const Ad& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Ad* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string download = 14;
  int download_size() const;
  void clear_download();
  static const int kDownloadFieldNumber = 14;
  const ::std::string& download(int index) const;
  ::std::string* mutable_download(int index);
  void set_download(int index, const ::std::string& value);
  void set_download(int index, const char* value);
  void set_download(int index, const char* value, size_t size);
  ::std::string* add_download();
  void add_download(const ::std::string& value);
  void add_download(const char* value);
  void add_download(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& download() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_download();

  // repeated string visitStatCode = 18;
  int visitstatcode_size() const;
  void clear_visitstatcode();
  static const int kVisitStatCodeFieldNumber = 18;
  const ::std::string& visitstatcode(int index) const;
  ::std::string* mutable_visitstatcode(int index);
  void set_visitstatcode(int index, const ::std::string& value);
  void set_visitstatcode(int index, const char* value);
  void set_visitstatcode(int index, const char* value, size_t size);
  ::std::string* add_visitstatcode();
  void add_visitstatcode(const ::std::string& value);
  void add_visitstatcode(const char* value);
  void add_visitstatcode(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& visitstatcode() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_visitstatcode();

  // repeated int32 pausePopAdIds = 19;
  int pausepopadids_size() const;
  void clear_pausepopadids();
  static const int kPausePopAdIdsFieldNumber = 19;
  ::google::protobuf::int32 pausepopadids(int index) const;
  void set_pausepopadids(int index, ::google::protobuf::int32 value);
  void add_pausepopadids(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      pausepopadids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_pausepopadids();

  // repeated int32 unlockPopAdIds = 20;
  int unlockpopadids_size() const;
  void clear_unlockpopadids();
  static const int kUnlockPopAdIdsFieldNumber = 20;
  ::google::protobuf::int32 unlockpopadids(int index) const;
  void set_unlockpopadids(int index, ::google::protobuf::int32 value);
  void add_unlockpopadids(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      unlockpopadids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_unlockpopadids();

  // string name = 2;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // string fileName = 3;
  void clear_filename();
  static const int kFileNameFieldNumber = 3;
  const ::std::string& filename() const;
  void set_filename(const ::std::string& value);
  #if LANG_CXX11
  void set_filename(::std::string&& value);
  #endif
  void set_filename(const char* value);
  void set_filename(const char* value, size_t size);
  ::std::string* mutable_filename();
  ::std::string* release_filename();
  void set_allocated_filename(::std::string* filename);

  // string advertiser = 4;
  void clear_advertiser();
  static const int kAdvertiserFieldNumber = 4;
  const ::std::string& advertiser() const;
  void set_advertiser(const ::std::string& value);
  #if LANG_CXX11
  void set_advertiser(::std::string&& value);
  #endif
  void set_advertiser(const char* value);
  void set_advertiser(const char* value, size_t size);
  ::std::string* mutable_advertiser();
  ::std::string* release_advertiser();
  void set_allocated_advertiser(::std::string* advertiser);

  // string url = 6;
  void clear_url();
  static const int kUrlFieldNumber = 6;
  const ::std::string& url() const;
  void set_url(const ::std::string& value);
  #if LANG_CXX11
  void set_url(::std::string&& value);
  #endif
  void set_url(const char* value);
  void set_url(const char* value, size_t size);
  ::std::string* mutable_url();
  ::std::string* release_url();
  void set_allocated_url(::std::string* url);

  // bytes image = 7;
  void clear_image();
  static const int kImageFieldNumber = 7;
  const ::std::string& image() const;
  void set_image(const ::std::string& value);
  #if LANG_CXX11
  void set_image(::std::string&& value);
  #endif
  void set_image(const char* value);
  void set_image(const void* value, size_t size);
  ::std::string* mutable_image();
  ::std::string* release_image();
  void set_allocated_image(::std::string* image);

  // string format = 10;
  void clear_format();
  static const int kFormatFieldNumber = 10;
  const ::std::string& format() const;
  void set_format(const ::std::string& value);
  #if LANG_CXX11
  void set_format(::std::string&& value);
  #endif
  void set_format(const char* value);
  void set_format(const char* value, size_t size);
  ::std::string* mutable_format();
  ::std::string* release_format();
  void set_allocated_format(::std::string* format);

  // string md5 = 12;
  void clear_md5();
  static const int kMd5FieldNumber = 12;
  const ::std::string& md5() const;
  void set_md5(const ::std::string& value);
  #if LANG_CXX11
  void set_md5(::std::string&& value);
  #endif
  void set_md5(const char* value);
  void set_md5(const char* value, size_t size);
  ::std::string* mutable_md5();
  ::std::string* release_md5();
  void set_allocated_md5(::std::string* md5);

  // int32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // int32 type = 5;
  void clear_type();
  static const int kTypeFieldNumber = 5;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // int32 width = 8;
  void clear_width();
  static const int kWidthFieldNumber = 8;
  ::google::protobuf::int32 width() const;
  void set_width(::google::protobuf::int32 value);

  // int32 height = 9;
  void clear_height();
  static const int kHeightFieldNumber = 9;
  ::google::protobuf::int32 height() const;
  void set_height(::google::protobuf::int32 value);

  // int32 size = 11;
  void clear_size();
  static const int kSizeFieldNumber = 11;
  ::google::protobuf::int32 size() const;
  void set_size(::google::protobuf::int32 value);

  // int32 duration = 13;
  void clear_duration();
  static const int kDurationFieldNumber = 13;
  ::google::protobuf::int32 duration() const;
  void set_duration(::google::protobuf::int32 value);

  // int32 minAge = 15;
  void clear_minage();
  static const int kMinAgeFieldNumber = 15;
  ::google::protobuf::int32 minage() const;
  void set_minage(::google::protobuf::int32 value);

  // int32 maxAge = 16;
  void clear_maxage();
  static const int kMaxAgeFieldNumber = 16;
  ::google::protobuf::int32 maxage() const;
  void set_maxage(::google::protobuf::int32 value);

  // int32 sex = 17;
  void clear_sex();
  static const int kSexFieldNumber = 17;
  ::google::protobuf::int32 sex() const;
  void set_sex(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Ad)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> download_;
  ::google::protobuf::RepeatedPtrField< ::std::string> visitstatcode_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > pausepopadids_;
  mutable int _pausepopadids_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > unlockpopadids_;
  mutable int _unlockpopadids_cached_byte_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr filename_;
  ::google::protobuf::internal::ArenaStringPtr advertiser_;
  ::google::protobuf::internal::ArenaStringPtr url_;
  ::google::protobuf::internal::ArenaStringPtr image_;
  ::google::protobuf::internal::ArenaStringPtr format_;
  ::google::protobuf::internal::ArenaStringPtr md5_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 width_;
  ::google::protobuf::int32 height_;
  ::google::protobuf::int32 size_;
  ::google::protobuf::int32 duration_;
  ::google::protobuf::int32 minage_;
  ::google::protobuf::int32 maxage_;
  ::google::protobuf::int32 sex_;
  mutable int _cached_size_;
  friend struct  protobuf_AdPlayPolicy_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AdPlayPolicy_AdPlay_PlayTime : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:AdPlayPolicy.AdPlay.PlayTime) */ {
 public:
  AdPlayPolicy_AdPlay_PlayTime();
  virtual ~AdPlayPolicy_AdPlay_PlayTime();

  AdPlayPolicy_AdPlay_PlayTime(const AdPlayPolicy_AdPlay_PlayTime& from);

  inline AdPlayPolicy_AdPlay_PlayTime& operator=(const AdPlayPolicy_AdPlay_PlayTime& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AdPlayPolicy_AdPlay_PlayTime& default_instance();

  static inline const AdPlayPolicy_AdPlay_PlayTime* internal_default_instance() {
    return reinterpret_cast<const AdPlayPolicy_AdPlay_PlayTime*>(
               &_AdPlayPolicy_AdPlay_PlayTime_default_instance_);
  }

  void Swap(AdPlayPolicy_AdPlay_PlayTime* other);

  // implements Message ----------------------------------------------

  inline AdPlayPolicy_AdPlay_PlayTime* New() const PROTOBUF_FINAL { return New(NULL); }

  AdPlayPolicy_AdPlay_PlayTime* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AdPlayPolicy_AdPlay_PlayTime& from);
  void MergeFrom(const AdPlayPolicy_AdPlay_PlayTime& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AdPlayPolicy_AdPlay_PlayTime* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string bgnTime = 1;
  void clear_bgntime();
  static const int kBgnTimeFieldNumber = 1;
  const ::std::string& bgntime() const;
  void set_bgntime(const ::std::string& value);
  #if LANG_CXX11
  void set_bgntime(::std::string&& value);
  #endif
  void set_bgntime(const char* value);
  void set_bgntime(const char* value, size_t size);
  ::std::string* mutable_bgntime();
  ::std::string* release_bgntime();
  void set_allocated_bgntime(::std::string* bgntime);

  // string endTime = 2;
  void clear_endtime();
  static const int kEndTimeFieldNumber = 2;
  const ::std::string& endtime() const;
  void set_endtime(const ::std::string& value);
  #if LANG_CXX11
  void set_endtime(::std::string&& value);
  #endif
  void set_endtime(const char* value);
  void set_endtime(const char* value, size_t size);
  ::std::string* mutable_endtime();
  ::std::string* release_endtime();
  void set_allocated_endtime(::std::string* endtime);

  // @@protoc_insertion_point(class_scope:AdPlayPolicy.AdPlay.PlayTime)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr bgntime_;
  ::google::protobuf::internal::ArenaStringPtr endtime_;
  mutable int _cached_size_;
  friend struct  protobuf_AdPlayPolicy_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AdPlayPolicy_AdPlay : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:AdPlayPolicy.AdPlay) */ {
 public:
  AdPlayPolicy_AdPlay();
  virtual ~AdPlayPolicy_AdPlay();

  AdPlayPolicy_AdPlay(const AdPlayPolicy_AdPlay& from);

  inline AdPlayPolicy_AdPlay& operator=(const AdPlayPolicy_AdPlay& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AdPlayPolicy_AdPlay& default_instance();

  static inline const AdPlayPolicy_AdPlay* internal_default_instance() {
    return reinterpret_cast<const AdPlayPolicy_AdPlay*>(
               &_AdPlayPolicy_AdPlay_default_instance_);
  }

  void Swap(AdPlayPolicy_AdPlay* other);

  // implements Message ----------------------------------------------

  inline AdPlayPolicy_AdPlay* New() const PROTOBUF_FINAL { return New(NULL); }

  AdPlayPolicy_AdPlay* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AdPlayPolicy_AdPlay& from);
  void MergeFrom(const AdPlayPolicy_AdPlay& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AdPlayPolicy_AdPlay* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef AdPlayPolicy_AdPlay_PlayTime PlayTime;

  // accessors -------------------------------------------------------

  // repeated .AdPlayPolicy.AdPlay.PlayTime playTimes = 4;
  int playtimes_size() const;
  void clear_playtimes();
  static const int kPlayTimesFieldNumber = 4;
  const ::AdPlayPolicy_AdPlay_PlayTime& playtimes(int index) const;
  ::AdPlayPolicy_AdPlay_PlayTime* mutable_playtimes(int index);
  ::AdPlayPolicy_AdPlay_PlayTime* add_playtimes();
  ::google::protobuf::RepeatedPtrField< ::AdPlayPolicy_AdPlay_PlayTime >*
      mutable_playtimes();
  const ::google::protobuf::RepeatedPtrField< ::AdPlayPolicy_AdPlay_PlayTime >&
      playtimes() const;

  // repeated int32 adIds = 5;
  int adids_size() const;
  void clear_adids();
  static const int kAdIdsFieldNumber = 5;
  ::google::protobuf::int32 adids(int index) const;
  void set_adids(int index, ::google::protobuf::int32 value);
  void add_adids(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      adids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_adids();

  // int32 location = 1;
  void clear_location();
  static const int kLocationFieldNumber = 1;
  ::google::protobuf::int32 location() const;
  void set_location(::google::protobuf::int32 value);

  // int32 mode = 2;
  void clear_mode();
  static const int kModeFieldNumber = 2;
  ::google::protobuf::int32 mode() const;
  void set_mode(::google::protobuf::int32 value);

  // bool needSync = 3;
  void clear_needsync();
  static const int kNeedSyncFieldNumber = 3;
  bool needsync() const;
  void set_needsync(bool value);

  // @@protoc_insertion_point(class_scope:AdPlayPolicy.AdPlay)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::AdPlayPolicy_AdPlay_PlayTime > playtimes_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > adids_;
  mutable int _adids_cached_byte_size_;
  ::google::protobuf::int32 location_;
  ::google::protobuf::int32 mode_;
  bool needsync_;
  mutable int _cached_size_;
  friend struct  protobuf_AdPlayPolicy_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AdPlayPolicy : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:AdPlayPolicy) */ {
 public:
  AdPlayPolicy();
  virtual ~AdPlayPolicy();

  AdPlayPolicy(const AdPlayPolicy& from);

  inline AdPlayPolicy& operator=(const AdPlayPolicy& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AdPlayPolicy& default_instance();

  static inline const AdPlayPolicy* internal_default_instance() {
    return reinterpret_cast<const AdPlayPolicy*>(
               &_AdPlayPolicy_default_instance_);
  }

  void Swap(AdPlayPolicy* other);

  // implements Message ----------------------------------------------

  inline AdPlayPolicy* New() const PROTOBUF_FINAL { return New(NULL); }

  AdPlayPolicy* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AdPlayPolicy& from);
  void MergeFrom(const AdPlayPolicy& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AdPlayPolicy* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef AdPlayPolicy_AdPlay AdPlay;

  // accessors -------------------------------------------------------

  // repeated .AdPlayPolicy.AdPlay adPlays = 4;
  int adplays_size() const;
  void clear_adplays();
  static const int kAdPlaysFieldNumber = 4;
  const ::AdPlayPolicy_AdPlay& adplays(int index) const;
  ::AdPlayPolicy_AdPlay* mutable_adplays(int index);
  ::AdPlayPolicy_AdPlay* add_adplays();
  ::google::protobuf::RepeatedPtrField< ::AdPlayPolicy_AdPlay >*
      mutable_adplays();
  const ::google::protobuf::RepeatedPtrField< ::AdPlayPolicy_AdPlay >&
      adplays() const;

  // string version = 2;
  void clear_version();
  static const int kVersionFieldNumber = 2;
  const ::std::string& version() const;
  void set_version(const ::std::string& value);
  #if LANG_CXX11
  void set_version(::std::string&& value);
  #endif
  void set_version(const char* value);
  void set_version(const char* value, size_t size);
  ::std::string* mutable_version();
  ::std::string* release_version();
  void set_allocated_version(::std::string* version);

  // string dateTime = 3;
  void clear_datetime();
  static const int kDateTimeFieldNumber = 3;
  const ::std::string& datetime() const;
  void set_datetime(const ::std::string& value);
  #if LANG_CXX11
  void set_datetime(::std::string&& value);
  #endif
  void set_datetime(const char* value);
  void set_datetime(const char* value, size_t size);
  ::std::string* mutable_datetime();
  ::std::string* release_datetime();
  void set_allocated_datetime(::std::string* datetime);

  // int32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:AdPlayPolicy)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::AdPlayPolicy_AdPlay > adplays_;
  ::google::protobuf::internal::ArenaStringPtr version_;
  ::google::protobuf::internal::ArenaStringPtr datetime_;
  ::google::protobuf::int32 id_;
  mutable int _cached_size_;
  friend struct  protobuf_AdPlayPolicy_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// Result

// repeated .Ad ads = 1;
inline int Result::ads_size() const {
  return ads_.size();
}
inline void Result::clear_ads() {
  ads_.Clear();
}
inline const ::Ad& Result::ads(int index) const {
  // @@protoc_insertion_point(field_get:Result.ads)
  return ads_.Get(index);
}
inline ::Ad* Result::mutable_ads(int index) {
  // @@protoc_insertion_point(field_mutable:Result.ads)
  return ads_.Mutable(index);
}
inline ::Ad* Result::add_ads() {
  // @@protoc_insertion_point(field_add:Result.ads)
  return ads_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::Ad >*
Result::mutable_ads() {
  // @@protoc_insertion_point(field_mutable_list:Result.ads)
  return &ads_;
}
inline const ::google::protobuf::RepeatedPtrField< ::Ad >&
Result::ads() const {
  // @@protoc_insertion_point(field_list:Result.ads)
  return ads_;
}

// -------------------------------------------------------------------

// Ad

// int32 id = 1;
inline void Ad::clear_id() {
  id_ = 0;
}
inline ::google::protobuf::int32 Ad::id() const {
  // @@protoc_insertion_point(field_get:Ad.id)
  return id_;
}
inline void Ad::set_id(::google::protobuf::int32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:Ad.id)
}

// string name = 2;
inline void Ad::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Ad::name() const {
  // @@protoc_insertion_point(field_get:Ad.name)
  return name_.GetNoArena();
}
inline void Ad::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Ad.name)
}
#if LANG_CXX11
inline void Ad::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Ad.name)
}
#endif
inline void Ad::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Ad.name)
}
inline void Ad::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Ad.name)
}
inline ::std::string* Ad::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:Ad.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Ad::release_name() {
  // @@protoc_insertion_point(field_release:Ad.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Ad::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:Ad.name)
}

// string fileName = 3;
inline void Ad::clear_filename() {
  filename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Ad::filename() const {
  // @@protoc_insertion_point(field_get:Ad.fileName)
  return filename_.GetNoArena();
}
inline void Ad::set_filename(const ::std::string& value) {
  
  filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Ad.fileName)
}
#if LANG_CXX11
inline void Ad::set_filename(::std::string&& value) {
  
  filename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Ad.fileName)
}
#endif
inline void Ad::set_filename(const char* value) {
  
  filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Ad.fileName)
}
inline void Ad::set_filename(const char* value, size_t size) {
  
  filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Ad.fileName)
}
inline ::std::string* Ad::mutable_filename() {
  
  // @@protoc_insertion_point(field_mutable:Ad.fileName)
  return filename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Ad::release_filename() {
  // @@protoc_insertion_point(field_release:Ad.fileName)
  
  return filename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Ad::set_allocated_filename(::std::string* filename) {
  if (filename != NULL) {
    
  } else {
    
  }
  filename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), filename);
  // @@protoc_insertion_point(field_set_allocated:Ad.fileName)
}

// string advertiser = 4;
inline void Ad::clear_advertiser() {
  advertiser_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Ad::advertiser() const {
  // @@protoc_insertion_point(field_get:Ad.advertiser)
  return advertiser_.GetNoArena();
}
inline void Ad::set_advertiser(const ::std::string& value) {
  
  advertiser_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Ad.advertiser)
}
#if LANG_CXX11
inline void Ad::set_advertiser(::std::string&& value) {
  
  advertiser_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Ad.advertiser)
}
#endif
inline void Ad::set_advertiser(const char* value) {
  
  advertiser_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Ad.advertiser)
}
inline void Ad::set_advertiser(const char* value, size_t size) {
  
  advertiser_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Ad.advertiser)
}
inline ::std::string* Ad::mutable_advertiser() {
  
  // @@protoc_insertion_point(field_mutable:Ad.advertiser)
  return advertiser_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Ad::release_advertiser() {
  // @@protoc_insertion_point(field_release:Ad.advertiser)
  
  return advertiser_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Ad::set_allocated_advertiser(::std::string* advertiser) {
  if (advertiser != NULL) {
    
  } else {
    
  }
  advertiser_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), advertiser);
  // @@protoc_insertion_point(field_set_allocated:Ad.advertiser)
}

// int32 type = 5;
inline void Ad::clear_type() {
  type_ = 0;
}
inline ::google::protobuf::int32 Ad::type() const {
  // @@protoc_insertion_point(field_get:Ad.type)
  return type_;
}
inline void Ad::set_type(::google::protobuf::int32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:Ad.type)
}

// string url = 6;
inline void Ad::clear_url() {
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Ad::url() const {
  // @@protoc_insertion_point(field_get:Ad.url)
  return url_.GetNoArena();
}
inline void Ad::set_url(const ::std::string& value) {
  
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Ad.url)
}
#if LANG_CXX11
inline void Ad::set_url(::std::string&& value) {
  
  url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Ad.url)
}
#endif
inline void Ad::set_url(const char* value) {
  
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Ad.url)
}
inline void Ad::set_url(const char* value, size_t size) {
  
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Ad.url)
}
inline ::std::string* Ad::mutable_url() {
  
  // @@protoc_insertion_point(field_mutable:Ad.url)
  return url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Ad::release_url() {
  // @@protoc_insertion_point(field_release:Ad.url)
  
  return url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Ad::set_allocated_url(::std::string* url) {
  if (url != NULL) {
    
  } else {
    
  }
  url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url);
  // @@protoc_insertion_point(field_set_allocated:Ad.url)
}

// bytes image = 7;
inline void Ad::clear_image() {
  image_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Ad::image() const {
  // @@protoc_insertion_point(field_get:Ad.image)
  return image_.GetNoArena();
}
inline void Ad::set_image(const ::std::string& value) {
  
  image_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Ad.image)
}
#if LANG_CXX11
inline void Ad::set_image(::std::string&& value) {
  
  image_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Ad.image)
}
#endif
inline void Ad::set_image(const char* value) {
  
  image_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Ad.image)
}
inline void Ad::set_image(const void* value, size_t size) {
  
  image_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Ad.image)
}
inline ::std::string* Ad::mutable_image() {
  
  // @@protoc_insertion_point(field_mutable:Ad.image)
  return image_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Ad::release_image() {
  // @@protoc_insertion_point(field_release:Ad.image)
  
  return image_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Ad::set_allocated_image(::std::string* image) {
  if (image != NULL) {
    
  } else {
    
  }
  image_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), image);
  // @@protoc_insertion_point(field_set_allocated:Ad.image)
}

// int32 width = 8;
inline void Ad::clear_width() {
  width_ = 0;
}
inline ::google::protobuf::int32 Ad::width() const {
  // @@protoc_insertion_point(field_get:Ad.width)
  return width_;
}
inline void Ad::set_width(::google::protobuf::int32 value) {
  
  width_ = value;
  // @@protoc_insertion_point(field_set:Ad.width)
}

// int32 height = 9;
inline void Ad::clear_height() {
  height_ = 0;
}
inline ::google::protobuf::int32 Ad::height() const {
  // @@protoc_insertion_point(field_get:Ad.height)
  return height_;
}
inline void Ad::set_height(::google::protobuf::int32 value) {
  
  height_ = value;
  // @@protoc_insertion_point(field_set:Ad.height)
}

// string format = 10;
inline void Ad::clear_format() {
  format_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Ad::format() const {
  // @@protoc_insertion_point(field_get:Ad.format)
  return format_.GetNoArena();
}
inline void Ad::set_format(const ::std::string& value) {
  
  format_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Ad.format)
}
#if LANG_CXX11
inline void Ad::set_format(::std::string&& value) {
  
  format_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Ad.format)
}
#endif
inline void Ad::set_format(const char* value) {
  
  format_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Ad.format)
}
inline void Ad::set_format(const char* value, size_t size) {
  
  format_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Ad.format)
}
inline ::std::string* Ad::mutable_format() {
  
  // @@protoc_insertion_point(field_mutable:Ad.format)
  return format_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Ad::release_format() {
  // @@protoc_insertion_point(field_release:Ad.format)
  
  return format_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Ad::set_allocated_format(::std::string* format) {
  if (format != NULL) {
    
  } else {
    
  }
  format_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), format);
  // @@protoc_insertion_point(field_set_allocated:Ad.format)
}

// int32 size = 11;
inline void Ad::clear_size() {
  size_ = 0;
}
inline ::google::protobuf::int32 Ad::size() const {
  // @@protoc_insertion_point(field_get:Ad.size)
  return size_;
}
inline void Ad::set_size(::google::protobuf::int32 value) {
  
  size_ = value;
  // @@protoc_insertion_point(field_set:Ad.size)
}

// string md5 = 12;
inline void Ad::clear_md5() {
  md5_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Ad::md5() const {
  // @@protoc_insertion_point(field_get:Ad.md5)
  return md5_.GetNoArena();
}
inline void Ad::set_md5(const ::std::string& value) {
  
  md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Ad.md5)
}
#if LANG_CXX11
inline void Ad::set_md5(::std::string&& value) {
  
  md5_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Ad.md5)
}
#endif
inline void Ad::set_md5(const char* value) {
  
  md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Ad.md5)
}
inline void Ad::set_md5(const char* value, size_t size) {
  
  md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Ad.md5)
}
inline ::std::string* Ad::mutable_md5() {
  
  // @@protoc_insertion_point(field_mutable:Ad.md5)
  return md5_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Ad::release_md5() {
  // @@protoc_insertion_point(field_release:Ad.md5)
  
  return md5_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Ad::set_allocated_md5(::std::string* md5) {
  if (md5 != NULL) {
    
  } else {
    
  }
  md5_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), md5);
  // @@protoc_insertion_point(field_set_allocated:Ad.md5)
}

// int32 duration = 13;
inline void Ad::clear_duration() {
  duration_ = 0;
}
inline ::google::protobuf::int32 Ad::duration() const {
  // @@protoc_insertion_point(field_get:Ad.duration)
  return duration_;
}
inline void Ad::set_duration(::google::protobuf::int32 value) {
  
  duration_ = value;
  // @@protoc_insertion_point(field_set:Ad.duration)
}

// repeated string download = 14;
inline int Ad::download_size() const {
  return download_.size();
}
inline void Ad::clear_download() {
  download_.Clear();
}
inline const ::std::string& Ad::download(int index) const {
  // @@protoc_insertion_point(field_get:Ad.download)
  return download_.Get(index);
}
inline ::std::string* Ad::mutable_download(int index) {
  // @@protoc_insertion_point(field_mutable:Ad.download)
  return download_.Mutable(index);
}
inline void Ad::set_download(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:Ad.download)
  download_.Mutable(index)->assign(value);
}
inline void Ad::set_download(int index, const char* value) {
  download_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:Ad.download)
}
inline void Ad::set_download(int index, const char* value, size_t size) {
  download_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Ad.download)
}
inline ::std::string* Ad::add_download() {
  // @@protoc_insertion_point(field_add_mutable:Ad.download)
  return download_.Add();
}
inline void Ad::add_download(const ::std::string& value) {
  download_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:Ad.download)
}
inline void Ad::add_download(const char* value) {
  download_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:Ad.download)
}
inline void Ad::add_download(const char* value, size_t size) {
  download_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:Ad.download)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
Ad::download() const {
  // @@protoc_insertion_point(field_list:Ad.download)
  return download_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
Ad::mutable_download() {
  // @@protoc_insertion_point(field_mutable_list:Ad.download)
  return &download_;
}

// int32 minAge = 15;
inline void Ad::clear_minage() {
  minage_ = 0;
}
inline ::google::protobuf::int32 Ad::minage() const {
  // @@protoc_insertion_point(field_get:Ad.minAge)
  return minage_;
}
inline void Ad::set_minage(::google::protobuf::int32 value) {
  
  minage_ = value;
  // @@protoc_insertion_point(field_set:Ad.minAge)
}

// int32 maxAge = 16;
inline void Ad::clear_maxage() {
  maxage_ = 0;
}
inline ::google::protobuf::int32 Ad::maxage() const {
  // @@protoc_insertion_point(field_get:Ad.maxAge)
  return maxage_;
}
inline void Ad::set_maxage(::google::protobuf::int32 value) {
  
  maxage_ = value;
  // @@protoc_insertion_point(field_set:Ad.maxAge)
}

// int32 sex = 17;
inline void Ad::clear_sex() {
  sex_ = 0;
}
inline ::google::protobuf::int32 Ad::sex() const {
  // @@protoc_insertion_point(field_get:Ad.sex)
  return sex_;
}
inline void Ad::set_sex(::google::protobuf::int32 value) {
  
  sex_ = value;
  // @@protoc_insertion_point(field_set:Ad.sex)
}

// repeated string visitStatCode = 18;
inline int Ad::visitstatcode_size() const {
  return visitstatcode_.size();
}
inline void Ad::clear_visitstatcode() {
  visitstatcode_.Clear();
}
inline const ::std::string& Ad::visitstatcode(int index) const {
  // @@protoc_insertion_point(field_get:Ad.visitStatCode)
  return visitstatcode_.Get(index);
}
inline ::std::string* Ad::mutable_visitstatcode(int index) {
  // @@protoc_insertion_point(field_mutable:Ad.visitStatCode)
  return visitstatcode_.Mutable(index);
}
inline void Ad::set_visitstatcode(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:Ad.visitStatCode)
  visitstatcode_.Mutable(index)->assign(value);
}
inline void Ad::set_visitstatcode(int index, const char* value) {
  visitstatcode_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:Ad.visitStatCode)
}
inline void Ad::set_visitstatcode(int index, const char* value, size_t size) {
  visitstatcode_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Ad.visitStatCode)
}
inline ::std::string* Ad::add_visitstatcode() {
  // @@protoc_insertion_point(field_add_mutable:Ad.visitStatCode)
  return visitstatcode_.Add();
}
inline void Ad::add_visitstatcode(const ::std::string& value) {
  visitstatcode_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:Ad.visitStatCode)
}
inline void Ad::add_visitstatcode(const char* value) {
  visitstatcode_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:Ad.visitStatCode)
}
inline void Ad::add_visitstatcode(const char* value, size_t size) {
  visitstatcode_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:Ad.visitStatCode)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
Ad::visitstatcode() const {
  // @@protoc_insertion_point(field_list:Ad.visitStatCode)
  return visitstatcode_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
Ad::mutable_visitstatcode() {
  // @@protoc_insertion_point(field_mutable_list:Ad.visitStatCode)
  return &visitstatcode_;
}

// repeated int32 pausePopAdIds = 19;
inline int Ad::pausepopadids_size() const {
  return pausepopadids_.size();
}
inline void Ad::clear_pausepopadids() {
  pausepopadids_.Clear();
}
inline ::google::protobuf::int32 Ad::pausepopadids(int index) const {
  // @@protoc_insertion_point(field_get:Ad.pausePopAdIds)
  return pausepopadids_.Get(index);
}
inline void Ad::set_pausepopadids(int index, ::google::protobuf::int32 value) {
  pausepopadids_.Set(index, value);
  // @@protoc_insertion_point(field_set:Ad.pausePopAdIds)
}
inline void Ad::add_pausepopadids(::google::protobuf::int32 value) {
  pausepopadids_.Add(value);
  // @@protoc_insertion_point(field_add:Ad.pausePopAdIds)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
Ad::pausepopadids() const {
  // @@protoc_insertion_point(field_list:Ad.pausePopAdIds)
  return pausepopadids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
Ad::mutable_pausepopadids() {
  // @@protoc_insertion_point(field_mutable_list:Ad.pausePopAdIds)
  return &pausepopadids_;
}

// repeated int32 unlockPopAdIds = 20;
inline int Ad::unlockpopadids_size() const {
  return unlockpopadids_.size();
}
inline void Ad::clear_unlockpopadids() {
  unlockpopadids_.Clear();
}
inline ::google::protobuf::int32 Ad::unlockpopadids(int index) const {
  // @@protoc_insertion_point(field_get:Ad.unlockPopAdIds)
  return unlockpopadids_.Get(index);
}
inline void Ad::set_unlockpopadids(int index, ::google::protobuf::int32 value) {
  unlockpopadids_.Set(index, value);
  // @@protoc_insertion_point(field_set:Ad.unlockPopAdIds)
}
inline void Ad::add_unlockpopadids(::google::protobuf::int32 value) {
  unlockpopadids_.Add(value);
  // @@protoc_insertion_point(field_add:Ad.unlockPopAdIds)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
Ad::unlockpopadids() const {
  // @@protoc_insertion_point(field_list:Ad.unlockPopAdIds)
  return unlockpopadids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
Ad::mutable_unlockpopadids() {
  // @@protoc_insertion_point(field_mutable_list:Ad.unlockPopAdIds)
  return &unlockpopadids_;
}

// -------------------------------------------------------------------

// AdPlayPolicy_AdPlay_PlayTime

// string bgnTime = 1;
inline void AdPlayPolicy_AdPlay_PlayTime::clear_bgntime() {
  bgntime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AdPlayPolicy_AdPlay_PlayTime::bgntime() const {
  // @@protoc_insertion_point(field_get:AdPlayPolicy.AdPlay.PlayTime.bgnTime)
  return bgntime_.GetNoArena();
}
inline void AdPlayPolicy_AdPlay_PlayTime::set_bgntime(const ::std::string& value) {
  
  bgntime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:AdPlayPolicy.AdPlay.PlayTime.bgnTime)
}
#if LANG_CXX11
inline void AdPlayPolicy_AdPlay_PlayTime::set_bgntime(::std::string&& value) {
  
  bgntime_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:AdPlayPolicy.AdPlay.PlayTime.bgnTime)
}
#endif
inline void AdPlayPolicy_AdPlay_PlayTime::set_bgntime(const char* value) {
  
  bgntime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:AdPlayPolicy.AdPlay.PlayTime.bgnTime)
}
inline void AdPlayPolicy_AdPlay_PlayTime::set_bgntime(const char* value, size_t size) {
  
  bgntime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:AdPlayPolicy.AdPlay.PlayTime.bgnTime)
}
inline ::std::string* AdPlayPolicy_AdPlay_PlayTime::mutable_bgntime() {
  
  // @@protoc_insertion_point(field_mutable:AdPlayPolicy.AdPlay.PlayTime.bgnTime)
  return bgntime_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AdPlayPolicy_AdPlay_PlayTime::release_bgntime() {
  // @@protoc_insertion_point(field_release:AdPlayPolicy.AdPlay.PlayTime.bgnTime)
  
  return bgntime_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AdPlayPolicy_AdPlay_PlayTime::set_allocated_bgntime(::std::string* bgntime) {
  if (bgntime != NULL) {
    
  } else {
    
  }
  bgntime_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bgntime);
  // @@protoc_insertion_point(field_set_allocated:AdPlayPolicy.AdPlay.PlayTime.bgnTime)
}

// string endTime = 2;
inline void AdPlayPolicy_AdPlay_PlayTime::clear_endtime() {
  endtime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AdPlayPolicy_AdPlay_PlayTime::endtime() const {
  // @@protoc_insertion_point(field_get:AdPlayPolicy.AdPlay.PlayTime.endTime)
  return endtime_.GetNoArena();
}
inline void AdPlayPolicy_AdPlay_PlayTime::set_endtime(const ::std::string& value) {
  
  endtime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:AdPlayPolicy.AdPlay.PlayTime.endTime)
}
#if LANG_CXX11
inline void AdPlayPolicy_AdPlay_PlayTime::set_endtime(::std::string&& value) {
  
  endtime_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:AdPlayPolicy.AdPlay.PlayTime.endTime)
}
#endif
inline void AdPlayPolicy_AdPlay_PlayTime::set_endtime(const char* value) {
  
  endtime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:AdPlayPolicy.AdPlay.PlayTime.endTime)
}
inline void AdPlayPolicy_AdPlay_PlayTime::set_endtime(const char* value, size_t size) {
  
  endtime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:AdPlayPolicy.AdPlay.PlayTime.endTime)
}
inline ::std::string* AdPlayPolicy_AdPlay_PlayTime::mutable_endtime() {
  
  // @@protoc_insertion_point(field_mutable:AdPlayPolicy.AdPlay.PlayTime.endTime)
  return endtime_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AdPlayPolicy_AdPlay_PlayTime::release_endtime() {
  // @@protoc_insertion_point(field_release:AdPlayPolicy.AdPlay.PlayTime.endTime)
  
  return endtime_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AdPlayPolicy_AdPlay_PlayTime::set_allocated_endtime(::std::string* endtime) {
  if (endtime != NULL) {
    
  } else {
    
  }
  endtime_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), endtime);
  // @@protoc_insertion_point(field_set_allocated:AdPlayPolicy.AdPlay.PlayTime.endTime)
}

// -------------------------------------------------------------------

// AdPlayPolicy_AdPlay

// int32 location = 1;
inline void AdPlayPolicy_AdPlay::clear_location() {
  location_ = 0;
}
inline ::google::protobuf::int32 AdPlayPolicy_AdPlay::location() const {
  // @@protoc_insertion_point(field_get:AdPlayPolicy.AdPlay.location)
  return location_;
}
inline void AdPlayPolicy_AdPlay::set_location(::google::protobuf::int32 value) {
  
  location_ = value;
  // @@protoc_insertion_point(field_set:AdPlayPolicy.AdPlay.location)
}

// int32 mode = 2;
inline void AdPlayPolicy_AdPlay::clear_mode() {
  mode_ = 0;
}
inline ::google::protobuf::int32 AdPlayPolicy_AdPlay::mode() const {
  // @@protoc_insertion_point(field_get:AdPlayPolicy.AdPlay.mode)
  return mode_;
}
inline void AdPlayPolicy_AdPlay::set_mode(::google::protobuf::int32 value) {
  
  mode_ = value;
  // @@protoc_insertion_point(field_set:AdPlayPolicy.AdPlay.mode)
}

// bool needSync = 3;
inline void AdPlayPolicy_AdPlay::clear_needsync() {
  needsync_ = false;
}
inline bool AdPlayPolicy_AdPlay::needsync() const {
  // @@protoc_insertion_point(field_get:AdPlayPolicy.AdPlay.needSync)
  return needsync_;
}
inline void AdPlayPolicy_AdPlay::set_needsync(bool value) {
  
  needsync_ = value;
  // @@protoc_insertion_point(field_set:AdPlayPolicy.AdPlay.needSync)
}

// repeated .AdPlayPolicy.AdPlay.PlayTime playTimes = 4;
inline int AdPlayPolicy_AdPlay::playtimes_size() const {
  return playtimes_.size();
}
inline void AdPlayPolicy_AdPlay::clear_playtimes() {
  playtimes_.Clear();
}
inline const ::AdPlayPolicy_AdPlay_PlayTime& AdPlayPolicy_AdPlay::playtimes(int index) const {
  // @@protoc_insertion_point(field_get:AdPlayPolicy.AdPlay.playTimes)
  return playtimes_.Get(index);
}
inline ::AdPlayPolicy_AdPlay_PlayTime* AdPlayPolicy_AdPlay::mutable_playtimes(int index) {
  // @@protoc_insertion_point(field_mutable:AdPlayPolicy.AdPlay.playTimes)
  return playtimes_.Mutable(index);
}
inline ::AdPlayPolicy_AdPlay_PlayTime* AdPlayPolicy_AdPlay::add_playtimes() {
  // @@protoc_insertion_point(field_add:AdPlayPolicy.AdPlay.playTimes)
  return playtimes_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::AdPlayPolicy_AdPlay_PlayTime >*
AdPlayPolicy_AdPlay::mutable_playtimes() {
  // @@protoc_insertion_point(field_mutable_list:AdPlayPolicy.AdPlay.playTimes)
  return &playtimes_;
}
inline const ::google::protobuf::RepeatedPtrField< ::AdPlayPolicy_AdPlay_PlayTime >&
AdPlayPolicy_AdPlay::playtimes() const {
  // @@protoc_insertion_point(field_list:AdPlayPolicy.AdPlay.playTimes)
  return playtimes_;
}

// repeated int32 adIds = 5;
inline int AdPlayPolicy_AdPlay::adids_size() const {
  return adids_.size();
}
inline void AdPlayPolicy_AdPlay::clear_adids() {
  adids_.Clear();
}
inline ::google::protobuf::int32 AdPlayPolicy_AdPlay::adids(int index) const {
  // @@protoc_insertion_point(field_get:AdPlayPolicy.AdPlay.adIds)
  return adids_.Get(index);
}
inline void AdPlayPolicy_AdPlay::set_adids(int index, ::google::protobuf::int32 value) {
  adids_.Set(index, value);
  // @@protoc_insertion_point(field_set:AdPlayPolicy.AdPlay.adIds)
}
inline void AdPlayPolicy_AdPlay::add_adids(::google::protobuf::int32 value) {
  adids_.Add(value);
  // @@protoc_insertion_point(field_add:AdPlayPolicy.AdPlay.adIds)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
AdPlayPolicy_AdPlay::adids() const {
  // @@protoc_insertion_point(field_list:AdPlayPolicy.AdPlay.adIds)
  return adids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
AdPlayPolicy_AdPlay::mutable_adids() {
  // @@protoc_insertion_point(field_mutable_list:AdPlayPolicy.AdPlay.adIds)
  return &adids_;
}

// -------------------------------------------------------------------

// AdPlayPolicy

// int32 id = 1;
inline void AdPlayPolicy::clear_id() {
  id_ = 0;
}
inline ::google::protobuf::int32 AdPlayPolicy::id() const {
  // @@protoc_insertion_point(field_get:AdPlayPolicy.id)
  return id_;
}
inline void AdPlayPolicy::set_id(::google::protobuf::int32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:AdPlayPolicy.id)
}

// string version = 2;
inline void AdPlayPolicy::clear_version() {
  version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AdPlayPolicy::version() const {
  // @@protoc_insertion_point(field_get:AdPlayPolicy.version)
  return version_.GetNoArena();
}
inline void AdPlayPolicy::set_version(const ::std::string& value) {
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:AdPlayPolicy.version)
}
#if LANG_CXX11
inline void AdPlayPolicy::set_version(::std::string&& value) {
  
  version_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:AdPlayPolicy.version)
}
#endif
inline void AdPlayPolicy::set_version(const char* value) {
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:AdPlayPolicy.version)
}
inline void AdPlayPolicy::set_version(const char* value, size_t size) {
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:AdPlayPolicy.version)
}
inline ::std::string* AdPlayPolicy::mutable_version() {
  
  // @@protoc_insertion_point(field_mutable:AdPlayPolicy.version)
  return version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AdPlayPolicy::release_version() {
  // @@protoc_insertion_point(field_release:AdPlayPolicy.version)
  
  return version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AdPlayPolicy::set_allocated_version(::std::string* version) {
  if (version != NULL) {
    
  } else {
    
  }
  version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), version);
  // @@protoc_insertion_point(field_set_allocated:AdPlayPolicy.version)
}

// string dateTime = 3;
inline void AdPlayPolicy::clear_datetime() {
  datetime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AdPlayPolicy::datetime() const {
  // @@protoc_insertion_point(field_get:AdPlayPolicy.dateTime)
  return datetime_.GetNoArena();
}
inline void AdPlayPolicy::set_datetime(const ::std::string& value) {
  
  datetime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:AdPlayPolicy.dateTime)
}
#if LANG_CXX11
inline void AdPlayPolicy::set_datetime(::std::string&& value) {
  
  datetime_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:AdPlayPolicy.dateTime)
}
#endif
inline void AdPlayPolicy::set_datetime(const char* value) {
  
  datetime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:AdPlayPolicy.dateTime)
}
inline void AdPlayPolicy::set_datetime(const char* value, size_t size) {
  
  datetime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:AdPlayPolicy.dateTime)
}
inline ::std::string* AdPlayPolicy::mutable_datetime() {
  
  // @@protoc_insertion_point(field_mutable:AdPlayPolicy.dateTime)
  return datetime_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AdPlayPolicy::release_datetime() {
  // @@protoc_insertion_point(field_release:AdPlayPolicy.dateTime)
  
  return datetime_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AdPlayPolicy::set_allocated_datetime(::std::string* datetime) {
  if (datetime != NULL) {
    
  } else {
    
  }
  datetime_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), datetime);
  // @@protoc_insertion_point(field_set_allocated:AdPlayPolicy.dateTime)
}

// repeated .AdPlayPolicy.AdPlay adPlays = 4;
inline int AdPlayPolicy::adplays_size() const {
  return adplays_.size();
}
inline void AdPlayPolicy::clear_adplays() {
  adplays_.Clear();
}
inline const ::AdPlayPolicy_AdPlay& AdPlayPolicy::adplays(int index) const {
  // @@protoc_insertion_point(field_get:AdPlayPolicy.adPlays)
  return adplays_.Get(index);
}
inline ::AdPlayPolicy_AdPlay* AdPlayPolicy::mutable_adplays(int index) {
  // @@protoc_insertion_point(field_mutable:AdPlayPolicy.adPlays)
  return adplays_.Mutable(index);
}
inline ::AdPlayPolicy_AdPlay* AdPlayPolicy::add_adplays() {
  // @@protoc_insertion_point(field_add:AdPlayPolicy.adPlays)
  return adplays_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::AdPlayPolicy_AdPlay >*
AdPlayPolicy::mutable_adplays() {
  // @@protoc_insertion_point(field_mutable_list:AdPlayPolicy.adPlays)
  return &adplays_;
}
inline const ::google::protobuf::RepeatedPtrField< ::AdPlayPolicy_AdPlay >&
AdPlayPolicy::adplays() const {
  // @@protoc_insertion_point(field_list:AdPlayPolicy.adPlays)
  return adplays_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_AdPlayPolicy_2eproto__INCLUDED
