// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: AdPlayPolicy.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "AdPlayPolicy.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
class ResultDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Result> {
} _Result_default_instance_;
class AdDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Ad> {
} _Ad_default_instance_;
class AdPlayPolicy_AdPlay_PlayTimeDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<AdPlayPolicy_AdPlay_PlayTime> {
} _AdPlayPolicy_AdPlay_PlayTime_default_instance_;
class AdPlayPolicy_AdPlayDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<AdPlayPolicy_AdPlay> {
} _AdPlayPolicy_AdPlay_default_instance_;
class AdPlayPolicyDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<AdPlayPolicy> {
} _AdPlayPolicy_default_instance_;

namespace protobuf_AdPlayPolicy_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[5];

}  // namespace

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Result, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Result, ads_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Ad, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Ad, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Ad, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Ad, filename_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Ad, advertiser_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Ad, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Ad, url_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Ad, image_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Ad, width_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Ad, height_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Ad, format_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Ad, size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Ad, md5_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Ad, duration_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Ad, download_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Ad, minage_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Ad, maxage_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Ad, sex_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Ad, visitstatcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Ad, pausepopadids_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Ad, unlockpopadids_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AdPlayPolicy_AdPlay_PlayTime, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AdPlayPolicy_AdPlay_PlayTime, bgntime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AdPlayPolicy_AdPlay_PlayTime, endtime_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AdPlayPolicy_AdPlay, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AdPlayPolicy_AdPlay, location_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AdPlayPolicy_AdPlay, mode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AdPlayPolicy_AdPlay, needsync_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AdPlayPolicy_AdPlay, playtimes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AdPlayPolicy_AdPlay, adids_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AdPlayPolicy, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AdPlayPolicy, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AdPlayPolicy, version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AdPlayPolicy, datetime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AdPlayPolicy, adplays_),
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, -1, sizeof(Result)},
  { 5, -1, sizeof(Ad)},
  { 29, -1, sizeof(AdPlayPolicy_AdPlay_PlayTime)},
  { 35, -1, sizeof(AdPlayPolicy_AdPlay)},
  { 44, -1, sizeof(AdPlayPolicy)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_Result_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Ad_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AdPlayPolicy_AdPlay_PlayTime_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AdPlayPolicy_AdPlay_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AdPlayPolicy_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "AdPlayPolicy.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 5);
}

}  // namespace

void TableStruct::Shutdown() {
  _Result_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _Ad_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _AdPlayPolicy_AdPlay_PlayTime_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
  _AdPlayPolicy_AdPlay_default_instance_.Shutdown();
  delete file_level_metadata[3].reflection;
  _AdPlayPolicy_default_instance_.Shutdown();
  delete file_level_metadata[4].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _Result_default_instance_.DefaultConstruct();
  _Ad_default_instance_.DefaultConstruct();
  _AdPlayPolicy_AdPlay_PlayTime_default_instance_.DefaultConstruct();
  _AdPlayPolicy_AdPlay_default_instance_.DefaultConstruct();
  _AdPlayPolicy_default_instance_.DefaultConstruct();
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\022AdPlayPolicy.proto\"\032\n\006Result\022\020\n\003ads\030\001 "
      "\003(\0132\003.Ad\"\317\002\n\002Ad\022\n\n\002id\030\001 \001(\005\022\014\n\004name\030\002 \001("
      "\t\022\020\n\010fileName\030\003 \001(\t\022\022\n\nadvertiser\030\004 \001(\t\022"
      "\014\n\004type\030\005 \001(\005\022\013\n\003url\030\006 \001(\t\022\r\n\005image\030\007 \001("
      "\014\022\r\n\005width\030\010 \001(\005\022\016\n\006height\030\t \001(\005\022\016\n\006form"
      "at\030\n \001(\t\022\014\n\004size\030\013 \001(\005\022\013\n\003md5\030\014 \001(\t\022\020\n\010d"
      "uration\030\r \001(\005\022\020\n\010download\030\016 \003(\t\022\016\n\006minAg"
      "e\030\017 \001(\005\022\016\n\006maxAge\030\020 \001(\005\022\013\n\003sex\030\021 \001(\005\022\025\n\r"
      "visitStatCode\030\022 \003(\t\022\025\n\rpausePopAdIds\030\023 \003"
      "(\005\022\026\n\016unlockPopAdIds\030\024 \003(\005\"\220\002\n\014AdPlayPol"
      "icy\022\n\n\002id\030\001 \001(\005\022\017\n\007version\030\002 \001(\t\022\020\n\010date"
      "Time\030\003 \001(\t\022%\n\007adPlays\030\004 \003(\0132\024.AdPlayPoli"
      "cy.AdPlay\032\251\001\n\006AdPlay\022\020\n\010location\030\001 \001(\005\022\014"
      "\n\004mode\030\002 \001(\005\022\020\n\010needSync\030\003 \001(\010\0220\n\tplayTi"
      "mes\030\004 \003(\0132\035.AdPlayPolicy.AdPlay.PlayTime"
      "\022\r\n\005adIds\030\005 \003(\005\032,\n\010PlayTime\022\017\n\007bgnTime\030\001"
      " \001(\t\022\017\n\007endTime\030\002 \001(\tB<\n\"com.oddmu.adver"
      "tcenter.model.protoB\026CommunicationMsgPro"
      "tosb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 731);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "AdPlayPolicy.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_AdPlayPolicy_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Result::kAdsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Result::Result()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_AdPlayPolicy_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Result)
}
Result::Result(const Result& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      ads_(from.ads_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Result)
}

void Result::SharedCtor() {
  _cached_size_ = 0;
}

Result::~Result() {
  // @@protoc_insertion_point(destructor:Result)
  SharedDtor();
}

void Result::SharedDtor() {
}

void Result::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Result::descriptor() {
  protobuf_AdPlayPolicy_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_AdPlayPolicy_2eproto::file_level_metadata[0].descriptor;
}

const Result& Result::default_instance() {
  protobuf_AdPlayPolicy_2eproto::InitDefaults();
  return *internal_default_instance();
}

Result* Result::New(::google::protobuf::Arena* arena) const {
  Result* n = new Result;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Result::Clear() {
// @@protoc_insertion_point(message_clear_start:Result)
  ads_.Clear();
}

bool Result::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Result)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .Ad ads = 1;
      case 1: {
        if (tag == 10u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_ads()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Result)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Result)
  return false;
#undef DO_
}

void Result::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Result)
  // repeated .Ad ads = 1;
  for (unsigned int i = 0, n = this->ads_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->ads(i), output);
  }

  // @@protoc_insertion_point(serialize_end:Result)
}

::google::protobuf::uint8* Result::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Result)
  // repeated .Ad ads = 1;
  for (unsigned int i = 0, n = this->ads_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->ads(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Result)
  return target;
}

size_t Result::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Result)
  size_t total_size = 0;

  // repeated .Ad ads = 1;
  {
    unsigned int count = this->ads_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->ads(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Result::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Result)
  GOOGLE_DCHECK_NE(&from, this);
  const Result* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Result>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Result)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Result)
    MergeFrom(*source);
  }
}

void Result::MergeFrom(const Result& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Result)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ads_.MergeFrom(from.ads_);
}

void Result::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Result::CopyFrom(const Result& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Result::IsInitialized() const {
  return true;
}

void Result::Swap(Result* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Result::InternalSwap(Result* other) {
  ads_.UnsafeArenaSwap(&other->ads_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Result::GetMetadata() const {
  protobuf_AdPlayPolicy_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_AdPlayPolicy_2eproto::file_level_metadata[0];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Result

// repeated .Ad ads = 1;
int Result::ads_size() const {
  return ads_.size();
}
void Result::clear_ads() {
  ads_.Clear();
}
const ::Ad& Result::ads(int index) const {
  // @@protoc_insertion_point(field_get:Result.ads)
  return ads_.Get(index);
}
::Ad* Result::mutable_ads(int index) {
  // @@protoc_insertion_point(field_mutable:Result.ads)
  return ads_.Mutable(index);
}
::Ad* Result::add_ads() {
  // @@protoc_insertion_point(field_add:Result.ads)
  return ads_.Add();
}
::google::protobuf::RepeatedPtrField< ::Ad >*
Result::mutable_ads() {
  // @@protoc_insertion_point(field_mutable_list:Result.ads)
  return &ads_;
}
const ::google::protobuf::RepeatedPtrField< ::Ad >&
Result::ads() const {
  // @@protoc_insertion_point(field_list:Result.ads)
  return ads_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Ad::kIdFieldNumber;
const int Ad::kNameFieldNumber;
const int Ad::kFileNameFieldNumber;
const int Ad::kAdvertiserFieldNumber;
const int Ad::kTypeFieldNumber;
const int Ad::kUrlFieldNumber;
const int Ad::kImageFieldNumber;
const int Ad::kWidthFieldNumber;
const int Ad::kHeightFieldNumber;
const int Ad::kFormatFieldNumber;
const int Ad::kSizeFieldNumber;
const int Ad::kMd5FieldNumber;
const int Ad::kDurationFieldNumber;
const int Ad::kDownloadFieldNumber;
const int Ad::kMinAgeFieldNumber;
const int Ad::kMaxAgeFieldNumber;
const int Ad::kSexFieldNumber;
const int Ad::kVisitStatCodeFieldNumber;
const int Ad::kPausePopAdIdsFieldNumber;
const int Ad::kUnlockPopAdIdsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Ad::Ad()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_AdPlayPolicy_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Ad)
}
Ad::Ad(const Ad& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      download_(from.download_),
      visitstatcode_(from.visitstatcode_),
      pausepopadids_(from.pausepopadids_),
      unlockpopadids_(from.unlockpopadids_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  filename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.filename().size() > 0) {
    filename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filename_);
  }
  advertiser_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.advertiser().size() > 0) {
    advertiser_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.advertiser_);
  }
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.url().size() > 0) {
    url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
  }
  image_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.image().size() > 0) {
    image_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.image_);
  }
  format_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.format().size() > 0) {
    format_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.format_);
  }
  md5_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.md5().size() > 0) {
    md5_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.md5_);
  }
  ::memcpy(&id_, &from.id_,
    reinterpret_cast<char*>(&sex_) -
    reinterpret_cast<char*>(&id_) + sizeof(sex_));
  // @@protoc_insertion_point(copy_constructor:Ad)
}

void Ad::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  advertiser_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  image_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  format_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  md5_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, reinterpret_cast<char*>(&sex_) -
    reinterpret_cast<char*>(&id_) + sizeof(sex_));
  _cached_size_ = 0;
}

Ad::~Ad() {
  // @@protoc_insertion_point(destructor:Ad)
  SharedDtor();
}

void Ad::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  advertiser_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  image_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  format_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  md5_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Ad::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Ad::descriptor() {
  protobuf_AdPlayPolicy_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_AdPlayPolicy_2eproto::file_level_metadata[1].descriptor;
}

const Ad& Ad::default_instance() {
  protobuf_AdPlayPolicy_2eproto::InitDefaults();
  return *internal_default_instance();
}

Ad* Ad::New(::google::protobuf::Arena* arena) const {
  Ad* n = new Ad;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Ad::Clear() {
// @@protoc_insertion_point(message_clear_start:Ad)
  download_.Clear();
  visitstatcode_.Clear();
  pausepopadids_.Clear();
  unlockpopadids_.Clear();
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  advertiser_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  image_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  format_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  md5_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, reinterpret_cast<char*>(&sex_) -
    reinterpret_cast<char*>(&id_) + sizeof(sex_));
}

bool Ad::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Ad)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 id = 1;
      case 1: {
        if (tag == 8u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Ad.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string fileName = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_filename()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->filename().data(), this->filename().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Ad.fileName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string advertiser = 4;
      case 4: {
        if (tag == 34u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_advertiser()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->advertiser().data(), this->advertiser().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Ad.advertiser"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 type = 5;
      case 5: {
        if (tag == 40u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string url = 6;
      case 6: {
        if (tag == 50u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_url()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->url().data(), this->url().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Ad.url"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes image = 7;
      case 7: {
        if (tag == 58u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_image()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 width = 8;
      case 8: {
        if (tag == 64u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &width_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 height = 9;
      case 9: {
        if (tag == 72u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &height_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string format = 10;
      case 10: {
        if (tag == 82u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_format()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->format().data(), this->format().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Ad.format"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 size = 11;
      case 11: {
        if (tag == 88u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string md5 = 12;
      case 12: {
        if (tag == 98u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_md5()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->md5().data(), this->md5().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Ad.md5"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 duration = 13;
      case 13: {
        if (tag == 104u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &duration_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string download = 14;
      case 14: {
        if (tag == 114u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_download()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->download(this->download_size() - 1).data(),
            this->download(this->download_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Ad.download"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 minAge = 15;
      case 15: {
        if (tag == 120u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &minage_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 maxAge = 16;
      case 16: {
        if (tag == 128u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &maxage_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 sex = 17;
      case 17: {
        if (tag == 136u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sex_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string visitStatCode = 18;
      case 18: {
        if (tag == 146u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_visitstatcode()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->visitstatcode(this->visitstatcode_size() - 1).data(),
            this->visitstatcode(this->visitstatcode_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Ad.visitStatCode"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 pausePopAdIds = 19;
      case 19: {
        if (tag == 154u) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_pausepopadids())));
        } else if (tag == 152u) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 2, 154u, input, this->mutable_pausepopadids())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 unlockPopAdIds = 20;
      case 20: {
        if (tag == 162u) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_unlockpopadids())));
        } else if (tag == 160u) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 2, 162u, input, this->mutable_unlockpopadids())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Ad)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Ad)
  return false;
#undef DO_
}

void Ad::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Ad)
  // int32 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Ad.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // string fileName = 3;
  if (this->filename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filename().data(), this->filename().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Ad.fileName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->filename(), output);
  }

  // string advertiser = 4;
  if (this->advertiser().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->advertiser().data(), this->advertiser().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Ad.advertiser");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->advertiser(), output);
  }

  // int32 type = 5;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->type(), output);
  }

  // string url = 6;
  if (this->url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->url().data(), this->url().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Ad.url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->url(), output);
  }

  // bytes image = 7;
  if (this->image().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      7, this->image(), output);
  }

  // int32 width = 8;
  if (this->width() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->width(), output);
  }

  // int32 height = 9;
  if (this->height() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->height(), output);
  }

  // string format = 10;
  if (this->format().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->format().data(), this->format().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Ad.format");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->format(), output);
  }

  // int32 size = 11;
  if (this->size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->size(), output);
  }

  // string md5 = 12;
  if (this->md5().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->md5().data(), this->md5().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Ad.md5");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->md5(), output);
  }

  // int32 duration = 13;
  if (this->duration() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->duration(), output);
  }

  // repeated string download = 14;
  for (int i = 0; i < this->download_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->download(i).data(), this->download(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Ad.download");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      14, this->download(i), output);
  }

  // int32 minAge = 15;
  if (this->minage() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(15, this->minage(), output);
  }

  // int32 maxAge = 16;
  if (this->maxage() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(16, this->maxage(), output);
  }

  // int32 sex = 17;
  if (this->sex() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(17, this->sex(), output);
  }

  // repeated string visitStatCode = 18;
  for (int i = 0; i < this->visitstatcode_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->visitstatcode(i).data(), this->visitstatcode(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Ad.visitStatCode");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      18, this->visitstatcode(i), output);
  }

  // repeated int32 pausePopAdIds = 19;
  if (this->pausepopadids_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(19, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_pausepopadids_cached_byte_size_);
  }
  for (int i = 0; i < this->pausepopadids_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->pausepopadids(i), output);
  }

  // repeated int32 unlockPopAdIds = 20;
  if (this->unlockpopadids_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(20, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_unlockpopadids_cached_byte_size_);
  }
  for (int i = 0; i < this->unlockpopadids_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->unlockpopadids(i), output);
  }

  // @@protoc_insertion_point(serialize_end:Ad)
}

::google::protobuf::uint8* Ad::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Ad)
  // int32 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Ad.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // string fileName = 3;
  if (this->filename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filename().data(), this->filename().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Ad.fileName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->filename(), target);
  }

  // string advertiser = 4;
  if (this->advertiser().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->advertiser().data(), this->advertiser().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Ad.advertiser");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->advertiser(), target);
  }

  // int32 type = 5;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->type(), target);
  }

  // string url = 6;
  if (this->url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->url().data(), this->url().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Ad.url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->url(), target);
  }

  // bytes image = 7;
  if (this->image().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        7, this->image(), target);
  }

  // int32 width = 8;
  if (this->width() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->width(), target);
  }

  // int32 height = 9;
  if (this->height() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->height(), target);
  }

  // string format = 10;
  if (this->format().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->format().data(), this->format().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Ad.format");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->format(), target);
  }

  // int32 size = 11;
  if (this->size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->size(), target);
  }

  // string md5 = 12;
  if (this->md5().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->md5().data(), this->md5().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Ad.md5");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->md5(), target);
  }

  // int32 duration = 13;
  if (this->duration() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->duration(), target);
  }

  // repeated string download = 14;
  for (int i = 0; i < this->download_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->download(i).data(), this->download(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Ad.download");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(14, this->download(i), target);
  }

  // int32 minAge = 15;
  if (this->minage() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(15, this->minage(), target);
  }

  // int32 maxAge = 16;
  if (this->maxage() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(16, this->maxage(), target);
  }

  // int32 sex = 17;
  if (this->sex() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(17, this->sex(), target);
  }

  // repeated string visitStatCode = 18;
  for (int i = 0; i < this->visitstatcode_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->visitstatcode(i).data(), this->visitstatcode(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Ad.visitStatCode");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(18, this->visitstatcode(i), target);
  }

  // repeated int32 pausePopAdIds = 19;
  if (this->pausepopadids_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      19,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _pausepopadids_cached_byte_size_, target);
  }
  for (int i = 0; i < this->pausepopadids_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->pausepopadids(i), target);
  }

  // repeated int32 unlockPopAdIds = 20;
  if (this->unlockpopadids_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      20,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _unlockpopadids_cached_byte_size_, target);
  }
  for (int i = 0; i < this->unlockpopadids_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->unlockpopadids(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Ad)
  return target;
}

size_t Ad::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Ad)
  size_t total_size = 0;

  // repeated string download = 14;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->download_size());
  for (int i = 0; i < this->download_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->download(i));
  }

  // repeated string visitStatCode = 18;
  total_size += 2 *
      ::google::protobuf::internal::FromIntSize(this->visitstatcode_size());
  for (int i = 0; i < this->visitstatcode_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->visitstatcode(i));
  }

  // repeated int32 pausePopAdIds = 19;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->pausepopadids_);
    if (data_size > 0) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _pausepopadids_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 unlockPopAdIds = 20;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->unlockpopadids_);
    if (data_size > 0) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _unlockpopadids_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string fileName = 3;
  if (this->filename().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->filename());
  }

  // string advertiser = 4;
  if (this->advertiser().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->advertiser());
  }

  // string url = 6;
  if (this->url().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->url());
  }

  // bytes image = 7;
  if (this->image().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->image());
  }

  // string format = 10;
  if (this->format().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->format());
  }

  // string md5 = 12;
  if (this->md5().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->md5());
  }

  // int32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  // int32 type = 5;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->type());
  }

  // int32 width = 8;
  if (this->width() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->width());
  }

  // int32 height = 9;
  if (this->height() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->height());
  }

  // int32 size = 11;
  if (this->size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->size());
  }

  // int32 duration = 13;
  if (this->duration() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->duration());
  }

  // int32 minAge = 15;
  if (this->minage() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->minage());
  }

  // int32 maxAge = 16;
  if (this->maxage() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->maxage());
  }

  // int32 sex = 17;
  if (this->sex() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->sex());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Ad::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Ad)
  GOOGLE_DCHECK_NE(&from, this);
  const Ad* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Ad>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Ad)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Ad)
    MergeFrom(*source);
  }
}

void Ad::MergeFrom(const Ad& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Ad)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  download_.MergeFrom(from.download_);
  visitstatcode_.MergeFrom(from.visitstatcode_);
  pausepopadids_.MergeFrom(from.pausepopadids_);
  unlockpopadids_.MergeFrom(from.unlockpopadids_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.filename().size() > 0) {

    filename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filename_);
  }
  if (from.advertiser().size() > 0) {

    advertiser_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.advertiser_);
  }
  if (from.url().size() > 0) {

    url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
  }
  if (from.image().size() > 0) {

    image_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.image_);
  }
  if (from.format().size() > 0) {

    format_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.format_);
  }
  if (from.md5().size() > 0) {

    md5_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.md5_);
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.width() != 0) {
    set_width(from.width());
  }
  if (from.height() != 0) {
    set_height(from.height());
  }
  if (from.size() != 0) {
    set_size(from.size());
  }
  if (from.duration() != 0) {
    set_duration(from.duration());
  }
  if (from.minage() != 0) {
    set_minage(from.minage());
  }
  if (from.maxage() != 0) {
    set_maxage(from.maxage());
  }
  if (from.sex() != 0) {
    set_sex(from.sex());
  }
}

void Ad::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Ad)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Ad::CopyFrom(const Ad& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Ad)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Ad::IsInitialized() const {
  return true;
}

void Ad::Swap(Ad* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Ad::InternalSwap(Ad* other) {
  download_.UnsafeArenaSwap(&other->download_);
  visitstatcode_.UnsafeArenaSwap(&other->visitstatcode_);
  pausepopadids_.UnsafeArenaSwap(&other->pausepopadids_);
  unlockpopadids_.UnsafeArenaSwap(&other->unlockpopadids_);
  name_.Swap(&other->name_);
  filename_.Swap(&other->filename_);
  advertiser_.Swap(&other->advertiser_);
  url_.Swap(&other->url_);
  image_.Swap(&other->image_);
  format_.Swap(&other->format_);
  md5_.Swap(&other->md5_);
  std::swap(id_, other->id_);
  std::swap(type_, other->type_);
  std::swap(width_, other->width_);
  std::swap(height_, other->height_);
  std::swap(size_, other->size_);
  std::swap(duration_, other->duration_);
  std::swap(minage_, other->minage_);
  std::swap(maxage_, other->maxage_);
  std::swap(sex_, other->sex_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Ad::GetMetadata() const {
  protobuf_AdPlayPolicy_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_AdPlayPolicy_2eproto::file_level_metadata[1];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Ad

// int32 id = 1;
void Ad::clear_id() {
  id_ = 0;
}
::google::protobuf::int32 Ad::id() const {
  // @@protoc_insertion_point(field_get:Ad.id)
  return id_;
}
void Ad::set_id(::google::protobuf::int32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:Ad.id)
}

// string name = 2;
void Ad::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Ad::name() const {
  // @@protoc_insertion_point(field_get:Ad.name)
  return name_.GetNoArena();
}
void Ad::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Ad.name)
}
#if LANG_CXX11
void Ad::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Ad.name)
}
#endif
void Ad::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Ad.name)
}
void Ad::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Ad.name)
}
::std::string* Ad::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:Ad.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Ad::release_name() {
  // @@protoc_insertion_point(field_release:Ad.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Ad::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:Ad.name)
}

// string fileName = 3;
void Ad::clear_filename() {
  filename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Ad::filename() const {
  // @@protoc_insertion_point(field_get:Ad.fileName)
  return filename_.GetNoArena();
}
void Ad::set_filename(const ::std::string& value) {
  
  filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Ad.fileName)
}
#if LANG_CXX11
void Ad::set_filename(::std::string&& value) {
  
  filename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Ad.fileName)
}
#endif
void Ad::set_filename(const char* value) {
  
  filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Ad.fileName)
}
void Ad::set_filename(const char* value, size_t size) {
  
  filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Ad.fileName)
}
::std::string* Ad::mutable_filename() {
  
  // @@protoc_insertion_point(field_mutable:Ad.fileName)
  return filename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Ad::release_filename() {
  // @@protoc_insertion_point(field_release:Ad.fileName)
  
  return filename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Ad::set_allocated_filename(::std::string* filename) {
  if (filename != NULL) {
    
  } else {
    
  }
  filename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), filename);
  // @@protoc_insertion_point(field_set_allocated:Ad.fileName)
}

// string advertiser = 4;
void Ad::clear_advertiser() {
  advertiser_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Ad::advertiser() const {
  // @@protoc_insertion_point(field_get:Ad.advertiser)
  return advertiser_.GetNoArena();
}
void Ad::set_advertiser(const ::std::string& value) {
  
  advertiser_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Ad.advertiser)
}
#if LANG_CXX11
void Ad::set_advertiser(::std::string&& value) {
  
  advertiser_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Ad.advertiser)
}
#endif
void Ad::set_advertiser(const char* value) {
  
  advertiser_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Ad.advertiser)
}
void Ad::set_advertiser(const char* value, size_t size) {
  
  advertiser_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Ad.advertiser)
}
::std::string* Ad::mutable_advertiser() {
  
  // @@protoc_insertion_point(field_mutable:Ad.advertiser)
  return advertiser_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Ad::release_advertiser() {
  // @@protoc_insertion_point(field_release:Ad.advertiser)
  
  return advertiser_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Ad::set_allocated_advertiser(::std::string* advertiser) {
  if (advertiser != NULL) {
    
  } else {
    
  }
  advertiser_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), advertiser);
  // @@protoc_insertion_point(field_set_allocated:Ad.advertiser)
}

// int32 type = 5;
void Ad::clear_type() {
  type_ = 0;
}
::google::protobuf::int32 Ad::type() const {
  // @@protoc_insertion_point(field_get:Ad.type)
  return type_;
}
void Ad::set_type(::google::protobuf::int32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:Ad.type)
}

// string url = 6;
void Ad::clear_url() {
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Ad::url() const {
  // @@protoc_insertion_point(field_get:Ad.url)
  return url_.GetNoArena();
}
void Ad::set_url(const ::std::string& value) {
  
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Ad.url)
}
#if LANG_CXX11
void Ad::set_url(::std::string&& value) {
  
  url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Ad.url)
}
#endif
void Ad::set_url(const char* value) {
  
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Ad.url)
}
void Ad::set_url(const char* value, size_t size) {
  
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Ad.url)
}
::std::string* Ad::mutable_url() {
  
  // @@protoc_insertion_point(field_mutable:Ad.url)
  return url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Ad::release_url() {
  // @@protoc_insertion_point(field_release:Ad.url)
  
  return url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Ad::set_allocated_url(::std::string* url) {
  if (url != NULL) {
    
  } else {
    
  }
  url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url);
  // @@protoc_insertion_point(field_set_allocated:Ad.url)
}

// bytes image = 7;
void Ad::clear_image() {
  image_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Ad::image() const {
  // @@protoc_insertion_point(field_get:Ad.image)
  return image_.GetNoArena();
}
void Ad::set_image(const ::std::string& value) {
  
  image_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Ad.image)
}
#if LANG_CXX11
void Ad::set_image(::std::string&& value) {
  
  image_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Ad.image)
}
#endif
void Ad::set_image(const char* value) {
  
  image_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Ad.image)
}
void Ad::set_image(const void* value, size_t size) {
  
  image_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Ad.image)
}
::std::string* Ad::mutable_image() {
  
  // @@protoc_insertion_point(field_mutable:Ad.image)
  return image_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Ad::release_image() {
  // @@protoc_insertion_point(field_release:Ad.image)
  
  return image_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Ad::set_allocated_image(::std::string* image) {
  if (image != NULL) {
    
  } else {
    
  }
  image_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), image);
  // @@protoc_insertion_point(field_set_allocated:Ad.image)
}

// int32 width = 8;
void Ad::clear_width() {
  width_ = 0;
}
::google::protobuf::int32 Ad::width() const {
  // @@protoc_insertion_point(field_get:Ad.width)
  return width_;
}
void Ad::set_width(::google::protobuf::int32 value) {
  
  width_ = value;
  // @@protoc_insertion_point(field_set:Ad.width)
}

// int32 height = 9;
void Ad::clear_height() {
  height_ = 0;
}
::google::protobuf::int32 Ad::height() const {
  // @@protoc_insertion_point(field_get:Ad.height)
  return height_;
}
void Ad::set_height(::google::protobuf::int32 value) {
  
  height_ = value;
  // @@protoc_insertion_point(field_set:Ad.height)
}

// string format = 10;
void Ad::clear_format() {
  format_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Ad::format() const {
  // @@protoc_insertion_point(field_get:Ad.format)
  return format_.GetNoArena();
}
void Ad::set_format(const ::std::string& value) {
  
  format_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Ad.format)
}
#if LANG_CXX11
void Ad::set_format(::std::string&& value) {
  
  format_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Ad.format)
}
#endif
void Ad::set_format(const char* value) {
  
  format_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Ad.format)
}
void Ad::set_format(const char* value, size_t size) {
  
  format_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Ad.format)
}
::std::string* Ad::mutable_format() {
  
  // @@protoc_insertion_point(field_mutable:Ad.format)
  return format_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Ad::release_format() {
  // @@protoc_insertion_point(field_release:Ad.format)
  
  return format_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Ad::set_allocated_format(::std::string* format) {
  if (format != NULL) {
    
  } else {
    
  }
  format_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), format);
  // @@protoc_insertion_point(field_set_allocated:Ad.format)
}

// int32 size = 11;
void Ad::clear_size() {
  size_ = 0;
}
::google::protobuf::int32 Ad::size() const {
  // @@protoc_insertion_point(field_get:Ad.size)
  return size_;
}
void Ad::set_size(::google::protobuf::int32 value) {
  
  size_ = value;
  // @@protoc_insertion_point(field_set:Ad.size)
}

// string md5 = 12;
void Ad::clear_md5() {
  md5_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Ad::md5() const {
  // @@protoc_insertion_point(field_get:Ad.md5)
  return md5_.GetNoArena();
}
void Ad::set_md5(const ::std::string& value) {
  
  md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Ad.md5)
}
#if LANG_CXX11
void Ad::set_md5(::std::string&& value) {
  
  md5_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Ad.md5)
}
#endif
void Ad::set_md5(const char* value) {
  
  md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Ad.md5)
}
void Ad::set_md5(const char* value, size_t size) {
  
  md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Ad.md5)
}
::std::string* Ad::mutable_md5() {
  
  // @@protoc_insertion_point(field_mutable:Ad.md5)
  return md5_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Ad::release_md5() {
  // @@protoc_insertion_point(field_release:Ad.md5)
  
  return md5_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Ad::set_allocated_md5(::std::string* md5) {
  if (md5 != NULL) {
    
  } else {
    
  }
  md5_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), md5);
  // @@protoc_insertion_point(field_set_allocated:Ad.md5)
}

// int32 duration = 13;
void Ad::clear_duration() {
  duration_ = 0;
}
::google::protobuf::int32 Ad::duration() const {
  // @@protoc_insertion_point(field_get:Ad.duration)
  return duration_;
}
void Ad::set_duration(::google::protobuf::int32 value) {
  
  duration_ = value;
  // @@protoc_insertion_point(field_set:Ad.duration)
}

// repeated string download = 14;
int Ad::download_size() const {
  return download_.size();
}
void Ad::clear_download() {
  download_.Clear();
}
const ::std::string& Ad::download(int index) const {
  // @@protoc_insertion_point(field_get:Ad.download)
  return download_.Get(index);
}
::std::string* Ad::mutable_download(int index) {
  // @@protoc_insertion_point(field_mutable:Ad.download)
  return download_.Mutable(index);
}
void Ad::set_download(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:Ad.download)
  download_.Mutable(index)->assign(value);
}
void Ad::set_download(int index, const char* value) {
  download_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:Ad.download)
}
void Ad::set_download(int index, const char* value, size_t size) {
  download_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Ad.download)
}
::std::string* Ad::add_download() {
  // @@protoc_insertion_point(field_add_mutable:Ad.download)
  return download_.Add();
}
void Ad::add_download(const ::std::string& value) {
  download_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:Ad.download)
}
void Ad::add_download(const char* value) {
  download_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:Ad.download)
}
void Ad::add_download(const char* value, size_t size) {
  download_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:Ad.download)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
Ad::download() const {
  // @@protoc_insertion_point(field_list:Ad.download)
  return download_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
Ad::mutable_download() {
  // @@protoc_insertion_point(field_mutable_list:Ad.download)
  return &download_;
}

// int32 minAge = 15;
void Ad::clear_minage() {
  minage_ = 0;
}
::google::protobuf::int32 Ad::minage() const {
  // @@protoc_insertion_point(field_get:Ad.minAge)
  return minage_;
}
void Ad::set_minage(::google::protobuf::int32 value) {
  
  minage_ = value;
  // @@protoc_insertion_point(field_set:Ad.minAge)
}

// int32 maxAge = 16;
void Ad::clear_maxage() {
  maxage_ = 0;
}
::google::protobuf::int32 Ad::maxage() const {
  // @@protoc_insertion_point(field_get:Ad.maxAge)
  return maxage_;
}
void Ad::set_maxage(::google::protobuf::int32 value) {
  
  maxage_ = value;
  // @@protoc_insertion_point(field_set:Ad.maxAge)
}

// int32 sex = 17;
void Ad::clear_sex() {
  sex_ = 0;
}
::google::protobuf::int32 Ad::sex() const {
  // @@protoc_insertion_point(field_get:Ad.sex)
  return sex_;
}
void Ad::set_sex(::google::protobuf::int32 value) {
  
  sex_ = value;
  // @@protoc_insertion_point(field_set:Ad.sex)
}

// repeated string visitStatCode = 18;
int Ad::visitstatcode_size() const {
  return visitstatcode_.size();
}
void Ad::clear_visitstatcode() {
  visitstatcode_.Clear();
}
const ::std::string& Ad::visitstatcode(int index) const {
  // @@protoc_insertion_point(field_get:Ad.visitStatCode)
  return visitstatcode_.Get(index);
}
::std::string* Ad::mutable_visitstatcode(int index) {
  // @@protoc_insertion_point(field_mutable:Ad.visitStatCode)
  return visitstatcode_.Mutable(index);
}
void Ad::set_visitstatcode(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:Ad.visitStatCode)
  visitstatcode_.Mutable(index)->assign(value);
}
void Ad::set_visitstatcode(int index, const char* value) {
  visitstatcode_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:Ad.visitStatCode)
}
void Ad::set_visitstatcode(int index, const char* value, size_t size) {
  visitstatcode_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Ad.visitStatCode)
}
::std::string* Ad::add_visitstatcode() {
  // @@protoc_insertion_point(field_add_mutable:Ad.visitStatCode)
  return visitstatcode_.Add();
}
void Ad::add_visitstatcode(const ::std::string& value) {
  visitstatcode_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:Ad.visitStatCode)
}
void Ad::add_visitstatcode(const char* value) {
  visitstatcode_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:Ad.visitStatCode)
}
void Ad::add_visitstatcode(const char* value, size_t size) {
  visitstatcode_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:Ad.visitStatCode)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
Ad::visitstatcode() const {
  // @@protoc_insertion_point(field_list:Ad.visitStatCode)
  return visitstatcode_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
Ad::mutable_visitstatcode() {
  // @@protoc_insertion_point(field_mutable_list:Ad.visitStatCode)
  return &visitstatcode_;
}

// repeated int32 pausePopAdIds = 19;
int Ad::pausepopadids_size() const {
  return pausepopadids_.size();
}
void Ad::clear_pausepopadids() {
  pausepopadids_.Clear();
}
::google::protobuf::int32 Ad::pausepopadids(int index) const {
  // @@protoc_insertion_point(field_get:Ad.pausePopAdIds)
  return pausepopadids_.Get(index);
}
void Ad::set_pausepopadids(int index, ::google::protobuf::int32 value) {
  pausepopadids_.Set(index, value);
  // @@protoc_insertion_point(field_set:Ad.pausePopAdIds)
}
void Ad::add_pausepopadids(::google::protobuf::int32 value) {
  pausepopadids_.Add(value);
  // @@protoc_insertion_point(field_add:Ad.pausePopAdIds)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
Ad::pausepopadids() const {
  // @@protoc_insertion_point(field_list:Ad.pausePopAdIds)
  return pausepopadids_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
Ad::mutable_pausepopadids() {
  // @@protoc_insertion_point(field_mutable_list:Ad.pausePopAdIds)
  return &pausepopadids_;
}

// repeated int32 unlockPopAdIds = 20;
int Ad::unlockpopadids_size() const {
  return unlockpopadids_.size();
}
void Ad::clear_unlockpopadids() {
  unlockpopadids_.Clear();
}
::google::protobuf::int32 Ad::unlockpopadids(int index) const {
  // @@protoc_insertion_point(field_get:Ad.unlockPopAdIds)
  return unlockpopadids_.Get(index);
}
void Ad::set_unlockpopadids(int index, ::google::protobuf::int32 value) {
  unlockpopadids_.Set(index, value);
  // @@protoc_insertion_point(field_set:Ad.unlockPopAdIds)
}
void Ad::add_unlockpopadids(::google::protobuf::int32 value) {
  unlockpopadids_.Add(value);
  // @@protoc_insertion_point(field_add:Ad.unlockPopAdIds)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
Ad::unlockpopadids() const {
  // @@protoc_insertion_point(field_list:Ad.unlockPopAdIds)
  return unlockpopadids_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
Ad::mutable_unlockpopadids() {
  // @@protoc_insertion_point(field_mutable_list:Ad.unlockPopAdIds)
  return &unlockpopadids_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AdPlayPolicy_AdPlay_PlayTime::kBgnTimeFieldNumber;
const int AdPlayPolicy_AdPlay_PlayTime::kEndTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AdPlayPolicy_AdPlay_PlayTime::AdPlayPolicy_AdPlay_PlayTime()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_AdPlayPolicy_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:AdPlayPolicy.AdPlay.PlayTime)
}
AdPlayPolicy_AdPlay_PlayTime::AdPlayPolicy_AdPlay_PlayTime(const AdPlayPolicy_AdPlay_PlayTime& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  bgntime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.bgntime().size() > 0) {
    bgntime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bgntime_);
  }
  endtime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.endtime().size() > 0) {
    endtime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.endtime_);
  }
  // @@protoc_insertion_point(copy_constructor:AdPlayPolicy.AdPlay.PlayTime)
}

void AdPlayPolicy_AdPlay_PlayTime::SharedCtor() {
  bgntime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  endtime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

AdPlayPolicy_AdPlay_PlayTime::~AdPlayPolicy_AdPlay_PlayTime() {
  // @@protoc_insertion_point(destructor:AdPlayPolicy.AdPlay.PlayTime)
  SharedDtor();
}

void AdPlayPolicy_AdPlay_PlayTime::SharedDtor() {
  bgntime_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  endtime_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AdPlayPolicy_AdPlay_PlayTime::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AdPlayPolicy_AdPlay_PlayTime::descriptor() {
  protobuf_AdPlayPolicy_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_AdPlayPolicy_2eproto::file_level_metadata[2].descriptor;
}

const AdPlayPolicy_AdPlay_PlayTime& AdPlayPolicy_AdPlay_PlayTime::default_instance() {
  protobuf_AdPlayPolicy_2eproto::InitDefaults();
  return *internal_default_instance();
}

AdPlayPolicy_AdPlay_PlayTime* AdPlayPolicy_AdPlay_PlayTime::New(::google::protobuf::Arena* arena) const {
  AdPlayPolicy_AdPlay_PlayTime* n = new AdPlayPolicy_AdPlay_PlayTime;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AdPlayPolicy_AdPlay_PlayTime::Clear() {
// @@protoc_insertion_point(message_clear_start:AdPlayPolicy.AdPlay.PlayTime)
  bgntime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  endtime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool AdPlayPolicy_AdPlay_PlayTime::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AdPlayPolicy.AdPlay.PlayTime)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string bgnTime = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bgntime()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->bgntime().data(), this->bgntime().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "AdPlayPolicy.AdPlay.PlayTime.bgnTime"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string endTime = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_endtime()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->endtime().data(), this->endtime().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "AdPlayPolicy.AdPlay.PlayTime.endTime"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AdPlayPolicy.AdPlay.PlayTime)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AdPlayPolicy.AdPlay.PlayTime)
  return false;
#undef DO_
}

void AdPlayPolicy_AdPlay_PlayTime::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AdPlayPolicy.AdPlay.PlayTime)
  // string bgnTime = 1;
  if (this->bgntime().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bgntime().data(), this->bgntime().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "AdPlayPolicy.AdPlay.PlayTime.bgnTime");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->bgntime(), output);
  }

  // string endTime = 2;
  if (this->endtime().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->endtime().data(), this->endtime().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "AdPlayPolicy.AdPlay.PlayTime.endTime");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->endtime(), output);
  }

  // @@protoc_insertion_point(serialize_end:AdPlayPolicy.AdPlay.PlayTime)
}

::google::protobuf::uint8* AdPlayPolicy_AdPlay_PlayTime::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:AdPlayPolicy.AdPlay.PlayTime)
  // string bgnTime = 1;
  if (this->bgntime().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bgntime().data(), this->bgntime().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "AdPlayPolicy.AdPlay.PlayTime.bgnTime");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->bgntime(), target);
  }

  // string endTime = 2;
  if (this->endtime().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->endtime().data(), this->endtime().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "AdPlayPolicy.AdPlay.PlayTime.endTime");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->endtime(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:AdPlayPolicy.AdPlay.PlayTime)
  return target;
}

size_t AdPlayPolicy_AdPlay_PlayTime::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AdPlayPolicy.AdPlay.PlayTime)
  size_t total_size = 0;

  // string bgnTime = 1;
  if (this->bgntime().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->bgntime());
  }

  // string endTime = 2;
  if (this->endtime().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->endtime());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AdPlayPolicy_AdPlay_PlayTime::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AdPlayPolicy.AdPlay.PlayTime)
  GOOGLE_DCHECK_NE(&from, this);
  const AdPlayPolicy_AdPlay_PlayTime* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AdPlayPolicy_AdPlay_PlayTime>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AdPlayPolicy.AdPlay.PlayTime)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AdPlayPolicy.AdPlay.PlayTime)
    MergeFrom(*source);
  }
}

void AdPlayPolicy_AdPlay_PlayTime::MergeFrom(const AdPlayPolicy_AdPlay_PlayTime& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AdPlayPolicy.AdPlay.PlayTime)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.bgntime().size() > 0) {

    bgntime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bgntime_);
  }
  if (from.endtime().size() > 0) {

    endtime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.endtime_);
  }
}

void AdPlayPolicy_AdPlay_PlayTime::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AdPlayPolicy.AdPlay.PlayTime)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AdPlayPolicy_AdPlay_PlayTime::CopyFrom(const AdPlayPolicy_AdPlay_PlayTime& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AdPlayPolicy.AdPlay.PlayTime)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AdPlayPolicy_AdPlay_PlayTime::IsInitialized() const {
  return true;
}

void AdPlayPolicy_AdPlay_PlayTime::Swap(AdPlayPolicy_AdPlay_PlayTime* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AdPlayPolicy_AdPlay_PlayTime::InternalSwap(AdPlayPolicy_AdPlay_PlayTime* other) {
  bgntime_.Swap(&other->bgntime_);
  endtime_.Swap(&other->endtime_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AdPlayPolicy_AdPlay_PlayTime::GetMetadata() const {
  protobuf_AdPlayPolicy_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_AdPlayPolicy_2eproto::file_level_metadata[2];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AdPlayPolicy_AdPlay_PlayTime

// string bgnTime = 1;
void AdPlayPolicy_AdPlay_PlayTime::clear_bgntime() {
  bgntime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& AdPlayPolicy_AdPlay_PlayTime::bgntime() const {
  // @@protoc_insertion_point(field_get:AdPlayPolicy.AdPlay.PlayTime.bgnTime)
  return bgntime_.GetNoArena();
}
void AdPlayPolicy_AdPlay_PlayTime::set_bgntime(const ::std::string& value) {
  
  bgntime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:AdPlayPolicy.AdPlay.PlayTime.bgnTime)
}
#if LANG_CXX11
void AdPlayPolicy_AdPlay_PlayTime::set_bgntime(::std::string&& value) {
  
  bgntime_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:AdPlayPolicy.AdPlay.PlayTime.bgnTime)
}
#endif
void AdPlayPolicy_AdPlay_PlayTime::set_bgntime(const char* value) {
  
  bgntime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:AdPlayPolicy.AdPlay.PlayTime.bgnTime)
}
void AdPlayPolicy_AdPlay_PlayTime::set_bgntime(const char* value, size_t size) {
  
  bgntime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:AdPlayPolicy.AdPlay.PlayTime.bgnTime)
}
::std::string* AdPlayPolicy_AdPlay_PlayTime::mutable_bgntime() {
  
  // @@protoc_insertion_point(field_mutable:AdPlayPolicy.AdPlay.PlayTime.bgnTime)
  return bgntime_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AdPlayPolicy_AdPlay_PlayTime::release_bgntime() {
  // @@protoc_insertion_point(field_release:AdPlayPolicy.AdPlay.PlayTime.bgnTime)
  
  return bgntime_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AdPlayPolicy_AdPlay_PlayTime::set_allocated_bgntime(::std::string* bgntime) {
  if (bgntime != NULL) {
    
  } else {
    
  }
  bgntime_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bgntime);
  // @@protoc_insertion_point(field_set_allocated:AdPlayPolicy.AdPlay.PlayTime.bgnTime)
}

// string endTime = 2;
void AdPlayPolicy_AdPlay_PlayTime::clear_endtime() {
  endtime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& AdPlayPolicy_AdPlay_PlayTime::endtime() const {
  // @@protoc_insertion_point(field_get:AdPlayPolicy.AdPlay.PlayTime.endTime)
  return endtime_.GetNoArena();
}
void AdPlayPolicy_AdPlay_PlayTime::set_endtime(const ::std::string& value) {
  
  endtime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:AdPlayPolicy.AdPlay.PlayTime.endTime)
}
#if LANG_CXX11
void AdPlayPolicy_AdPlay_PlayTime::set_endtime(::std::string&& value) {
  
  endtime_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:AdPlayPolicy.AdPlay.PlayTime.endTime)
}
#endif
void AdPlayPolicy_AdPlay_PlayTime::set_endtime(const char* value) {
  
  endtime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:AdPlayPolicy.AdPlay.PlayTime.endTime)
}
void AdPlayPolicy_AdPlay_PlayTime::set_endtime(const char* value, size_t size) {
  
  endtime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:AdPlayPolicy.AdPlay.PlayTime.endTime)
}
::std::string* AdPlayPolicy_AdPlay_PlayTime::mutable_endtime() {
  
  // @@protoc_insertion_point(field_mutable:AdPlayPolicy.AdPlay.PlayTime.endTime)
  return endtime_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AdPlayPolicy_AdPlay_PlayTime::release_endtime() {
  // @@protoc_insertion_point(field_release:AdPlayPolicy.AdPlay.PlayTime.endTime)
  
  return endtime_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AdPlayPolicy_AdPlay_PlayTime::set_allocated_endtime(::std::string* endtime) {
  if (endtime != NULL) {
    
  } else {
    
  }
  endtime_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), endtime);
  // @@protoc_insertion_point(field_set_allocated:AdPlayPolicy.AdPlay.PlayTime.endTime)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AdPlayPolicy_AdPlay::kLocationFieldNumber;
const int AdPlayPolicy_AdPlay::kModeFieldNumber;
const int AdPlayPolicy_AdPlay::kNeedSyncFieldNumber;
const int AdPlayPolicy_AdPlay::kPlayTimesFieldNumber;
const int AdPlayPolicy_AdPlay::kAdIdsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AdPlayPolicy_AdPlay::AdPlayPolicy_AdPlay()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_AdPlayPolicy_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:AdPlayPolicy.AdPlay)
}
AdPlayPolicy_AdPlay::AdPlayPolicy_AdPlay(const AdPlayPolicy_AdPlay& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      playtimes_(from.playtimes_),
      adids_(from.adids_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&location_, &from.location_,
    reinterpret_cast<char*>(&needsync_) -
    reinterpret_cast<char*>(&location_) + sizeof(needsync_));
  // @@protoc_insertion_point(copy_constructor:AdPlayPolicy.AdPlay)
}

void AdPlayPolicy_AdPlay::SharedCtor() {
  ::memset(&location_, 0, reinterpret_cast<char*>(&needsync_) -
    reinterpret_cast<char*>(&location_) + sizeof(needsync_));
  _cached_size_ = 0;
}

AdPlayPolicy_AdPlay::~AdPlayPolicy_AdPlay() {
  // @@protoc_insertion_point(destructor:AdPlayPolicy.AdPlay)
  SharedDtor();
}

void AdPlayPolicy_AdPlay::SharedDtor() {
}

void AdPlayPolicy_AdPlay::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AdPlayPolicy_AdPlay::descriptor() {
  protobuf_AdPlayPolicy_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_AdPlayPolicy_2eproto::file_level_metadata[3].descriptor;
}

const AdPlayPolicy_AdPlay& AdPlayPolicy_AdPlay::default_instance() {
  protobuf_AdPlayPolicy_2eproto::InitDefaults();
  return *internal_default_instance();
}

AdPlayPolicy_AdPlay* AdPlayPolicy_AdPlay::New(::google::protobuf::Arena* arena) const {
  AdPlayPolicy_AdPlay* n = new AdPlayPolicy_AdPlay;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AdPlayPolicy_AdPlay::Clear() {
// @@protoc_insertion_point(message_clear_start:AdPlayPolicy.AdPlay)
  playtimes_.Clear();
  adids_.Clear();
  ::memset(&location_, 0, reinterpret_cast<char*>(&needsync_) -
    reinterpret_cast<char*>(&location_) + sizeof(needsync_));
}

bool AdPlayPolicy_AdPlay::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AdPlayPolicy.AdPlay)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 location = 1;
      case 1: {
        if (tag == 8u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &location_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 mode = 2;
      case 2: {
        if (tag == 16u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool needSync = 3;
      case 3: {
        if (tag == 24u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &needsync_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .AdPlayPolicy.AdPlay.PlayTime playTimes = 4;
      case 4: {
        if (tag == 34u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_playtimes()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated int32 adIds = 5;
      case 5: {
        if (tag == 42u) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_adids())));
        } else if (tag == 40u) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 42u, input, this->mutable_adids())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AdPlayPolicy.AdPlay)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AdPlayPolicy.AdPlay)
  return false;
#undef DO_
}

void AdPlayPolicy_AdPlay::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AdPlayPolicy.AdPlay)
  // int32 location = 1;
  if (this->location() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->location(), output);
  }

  // int32 mode = 2;
  if (this->mode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->mode(), output);
  }

  // bool needSync = 3;
  if (this->needsync() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->needsync(), output);
  }

  // repeated .AdPlayPolicy.AdPlay.PlayTime playTimes = 4;
  for (unsigned int i = 0, n = this->playtimes_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->playtimes(i), output);
  }

  // repeated int32 adIds = 5;
  if (this->adids_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(5, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_adids_cached_byte_size_);
  }
  for (int i = 0; i < this->adids_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->adids(i), output);
  }

  // @@protoc_insertion_point(serialize_end:AdPlayPolicy.AdPlay)
}

::google::protobuf::uint8* AdPlayPolicy_AdPlay::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:AdPlayPolicy.AdPlay)
  // int32 location = 1;
  if (this->location() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->location(), target);
  }

  // int32 mode = 2;
  if (this->mode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->mode(), target);
  }

  // bool needSync = 3;
  if (this->needsync() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->needsync(), target);
  }

  // repeated .AdPlayPolicy.AdPlay.PlayTime playTimes = 4;
  for (unsigned int i = 0, n = this->playtimes_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, this->playtimes(i), false, target);
  }

  // repeated int32 adIds = 5;
  if (this->adids_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      5,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _adids_cached_byte_size_, target);
  }
  for (int i = 0; i < this->adids_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->adids(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:AdPlayPolicy.AdPlay)
  return target;
}

size_t AdPlayPolicy_AdPlay::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AdPlayPolicy.AdPlay)
  size_t total_size = 0;

  // repeated .AdPlayPolicy.AdPlay.PlayTime playTimes = 4;
  {
    unsigned int count = this->playtimes_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->playtimes(i));
    }
  }

  // repeated int32 adIds = 5;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->adids_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _adids_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // int32 location = 1;
  if (this->location() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->location());
  }

  // int32 mode = 2;
  if (this->mode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->mode());
  }

  // bool needSync = 3;
  if (this->needsync() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AdPlayPolicy_AdPlay::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AdPlayPolicy.AdPlay)
  GOOGLE_DCHECK_NE(&from, this);
  const AdPlayPolicy_AdPlay* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AdPlayPolicy_AdPlay>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AdPlayPolicy.AdPlay)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AdPlayPolicy.AdPlay)
    MergeFrom(*source);
  }
}

void AdPlayPolicy_AdPlay::MergeFrom(const AdPlayPolicy_AdPlay& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AdPlayPolicy.AdPlay)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  playtimes_.MergeFrom(from.playtimes_);
  adids_.MergeFrom(from.adids_);
  if (from.location() != 0) {
    set_location(from.location());
  }
  if (from.mode() != 0) {
    set_mode(from.mode());
  }
  if (from.needsync() != 0) {
    set_needsync(from.needsync());
  }
}

void AdPlayPolicy_AdPlay::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AdPlayPolicy.AdPlay)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AdPlayPolicy_AdPlay::CopyFrom(const AdPlayPolicy_AdPlay& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AdPlayPolicy.AdPlay)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AdPlayPolicy_AdPlay::IsInitialized() const {
  return true;
}

void AdPlayPolicy_AdPlay::Swap(AdPlayPolicy_AdPlay* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AdPlayPolicy_AdPlay::InternalSwap(AdPlayPolicy_AdPlay* other) {
  playtimes_.UnsafeArenaSwap(&other->playtimes_);
  adids_.UnsafeArenaSwap(&other->adids_);
  std::swap(location_, other->location_);
  std::swap(mode_, other->mode_);
  std::swap(needsync_, other->needsync_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AdPlayPolicy_AdPlay::GetMetadata() const {
  protobuf_AdPlayPolicy_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_AdPlayPolicy_2eproto::file_level_metadata[3];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AdPlayPolicy_AdPlay

// int32 location = 1;
void AdPlayPolicy_AdPlay::clear_location() {
  location_ = 0;
}
::google::protobuf::int32 AdPlayPolicy_AdPlay::location() const {
  // @@protoc_insertion_point(field_get:AdPlayPolicy.AdPlay.location)
  return location_;
}
void AdPlayPolicy_AdPlay::set_location(::google::protobuf::int32 value) {
  
  location_ = value;
  // @@protoc_insertion_point(field_set:AdPlayPolicy.AdPlay.location)
}

// int32 mode = 2;
void AdPlayPolicy_AdPlay::clear_mode() {
  mode_ = 0;
}
::google::protobuf::int32 AdPlayPolicy_AdPlay::mode() const {
  // @@protoc_insertion_point(field_get:AdPlayPolicy.AdPlay.mode)
  return mode_;
}
void AdPlayPolicy_AdPlay::set_mode(::google::protobuf::int32 value) {
  
  mode_ = value;
  // @@protoc_insertion_point(field_set:AdPlayPolicy.AdPlay.mode)
}

// bool needSync = 3;
void AdPlayPolicy_AdPlay::clear_needsync() {
  needsync_ = false;
}
bool AdPlayPolicy_AdPlay::needsync() const {
  // @@protoc_insertion_point(field_get:AdPlayPolicy.AdPlay.needSync)
  return needsync_;
}
void AdPlayPolicy_AdPlay::set_needsync(bool value) {
  
  needsync_ = value;
  // @@protoc_insertion_point(field_set:AdPlayPolicy.AdPlay.needSync)
}

// repeated .AdPlayPolicy.AdPlay.PlayTime playTimes = 4;
int AdPlayPolicy_AdPlay::playtimes_size() const {
  return playtimes_.size();
}
void AdPlayPolicy_AdPlay::clear_playtimes() {
  playtimes_.Clear();
}
const ::AdPlayPolicy_AdPlay_PlayTime& AdPlayPolicy_AdPlay::playtimes(int index) const {
  // @@protoc_insertion_point(field_get:AdPlayPolicy.AdPlay.playTimes)
  return playtimes_.Get(index);
}
::AdPlayPolicy_AdPlay_PlayTime* AdPlayPolicy_AdPlay::mutable_playtimes(int index) {
  // @@protoc_insertion_point(field_mutable:AdPlayPolicy.AdPlay.playTimes)
  return playtimes_.Mutable(index);
}
::AdPlayPolicy_AdPlay_PlayTime* AdPlayPolicy_AdPlay::add_playtimes() {
  // @@protoc_insertion_point(field_add:AdPlayPolicy.AdPlay.playTimes)
  return playtimes_.Add();
}
::google::protobuf::RepeatedPtrField< ::AdPlayPolicy_AdPlay_PlayTime >*
AdPlayPolicy_AdPlay::mutable_playtimes() {
  // @@protoc_insertion_point(field_mutable_list:AdPlayPolicy.AdPlay.playTimes)
  return &playtimes_;
}
const ::google::protobuf::RepeatedPtrField< ::AdPlayPolicy_AdPlay_PlayTime >&
AdPlayPolicy_AdPlay::playtimes() const {
  // @@protoc_insertion_point(field_list:AdPlayPolicy.AdPlay.playTimes)
  return playtimes_;
}

// repeated int32 adIds = 5;
int AdPlayPolicy_AdPlay::adids_size() const {
  return adids_.size();
}
void AdPlayPolicy_AdPlay::clear_adids() {
  adids_.Clear();
}
::google::protobuf::int32 AdPlayPolicy_AdPlay::adids(int index) const {
  // @@protoc_insertion_point(field_get:AdPlayPolicy.AdPlay.adIds)
  return adids_.Get(index);
}
void AdPlayPolicy_AdPlay::set_adids(int index, ::google::protobuf::int32 value) {
  adids_.Set(index, value);
  // @@protoc_insertion_point(field_set:AdPlayPolicy.AdPlay.adIds)
}
void AdPlayPolicy_AdPlay::add_adids(::google::protobuf::int32 value) {
  adids_.Add(value);
  // @@protoc_insertion_point(field_add:AdPlayPolicy.AdPlay.adIds)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
AdPlayPolicy_AdPlay::adids() const {
  // @@protoc_insertion_point(field_list:AdPlayPolicy.AdPlay.adIds)
  return adids_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
AdPlayPolicy_AdPlay::mutable_adids() {
  // @@protoc_insertion_point(field_mutable_list:AdPlayPolicy.AdPlay.adIds)
  return &adids_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AdPlayPolicy::kIdFieldNumber;
const int AdPlayPolicy::kVersionFieldNumber;
const int AdPlayPolicy::kDateTimeFieldNumber;
const int AdPlayPolicy::kAdPlaysFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AdPlayPolicy::AdPlayPolicy()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_AdPlayPolicy_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:AdPlayPolicy)
}
AdPlayPolicy::AdPlayPolicy(const AdPlayPolicy& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      adplays_(from.adplays_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.version().size() > 0) {
    version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_);
  }
  datetime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.datetime().size() > 0) {
    datetime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.datetime_);
  }
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:AdPlayPolicy)
}

void AdPlayPolicy::SharedCtor() {
  version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  datetime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_ = 0;
  _cached_size_ = 0;
}

AdPlayPolicy::~AdPlayPolicy() {
  // @@protoc_insertion_point(destructor:AdPlayPolicy)
  SharedDtor();
}

void AdPlayPolicy::SharedDtor() {
  version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  datetime_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AdPlayPolicy::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AdPlayPolicy::descriptor() {
  protobuf_AdPlayPolicy_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_AdPlayPolicy_2eproto::file_level_metadata[4].descriptor;
}

const AdPlayPolicy& AdPlayPolicy::default_instance() {
  protobuf_AdPlayPolicy_2eproto::InitDefaults();
  return *internal_default_instance();
}

AdPlayPolicy* AdPlayPolicy::New(::google::protobuf::Arena* arena) const {
  AdPlayPolicy* n = new AdPlayPolicy;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AdPlayPolicy::Clear() {
// @@protoc_insertion_point(message_clear_start:AdPlayPolicy)
  adplays_.Clear();
  version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  datetime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_ = 0;
}

bool AdPlayPolicy::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AdPlayPolicy)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 id = 1;
      case 1: {
        if (tag == 8u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string version = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_version()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->version().data(), this->version().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "AdPlayPolicy.version"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string dateTime = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_datetime()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->datetime().data(), this->datetime().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "AdPlayPolicy.dateTime"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .AdPlayPolicy.AdPlay adPlays = 4;
      case 4: {
        if (tag == 34u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_adplays()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AdPlayPolicy)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AdPlayPolicy)
  return false;
#undef DO_
}

void AdPlayPolicy::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AdPlayPolicy)
  // int32 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // string version = 2;
  if (this->version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->version().data(), this->version().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "AdPlayPolicy.version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->version(), output);
  }

  // string dateTime = 3;
  if (this->datetime().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->datetime().data(), this->datetime().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "AdPlayPolicy.dateTime");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->datetime(), output);
  }

  // repeated .AdPlayPolicy.AdPlay adPlays = 4;
  for (unsigned int i = 0, n = this->adplays_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->adplays(i), output);
  }

  // @@protoc_insertion_point(serialize_end:AdPlayPolicy)
}

::google::protobuf::uint8* AdPlayPolicy::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:AdPlayPolicy)
  // int32 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // string version = 2;
  if (this->version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->version().data(), this->version().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "AdPlayPolicy.version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->version(), target);
  }

  // string dateTime = 3;
  if (this->datetime().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->datetime().data(), this->datetime().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "AdPlayPolicy.dateTime");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->datetime(), target);
  }

  // repeated .AdPlayPolicy.AdPlay adPlays = 4;
  for (unsigned int i = 0, n = this->adplays_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, this->adplays(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:AdPlayPolicy)
  return target;
}

size_t AdPlayPolicy::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AdPlayPolicy)
  size_t total_size = 0;

  // repeated .AdPlayPolicy.AdPlay adPlays = 4;
  {
    unsigned int count = this->adplays_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->adplays(i));
    }
  }

  // string version = 2;
  if (this->version().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->version());
  }

  // string dateTime = 3;
  if (this->datetime().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->datetime());
  }

  // int32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AdPlayPolicy::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AdPlayPolicy)
  GOOGLE_DCHECK_NE(&from, this);
  const AdPlayPolicy* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AdPlayPolicy>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AdPlayPolicy)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AdPlayPolicy)
    MergeFrom(*source);
  }
}

void AdPlayPolicy::MergeFrom(const AdPlayPolicy& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AdPlayPolicy)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  adplays_.MergeFrom(from.adplays_);
  if (from.version().size() > 0) {

    version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_);
  }
  if (from.datetime().size() > 0) {

    datetime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.datetime_);
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
}

void AdPlayPolicy::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AdPlayPolicy)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AdPlayPolicy::CopyFrom(const AdPlayPolicy& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AdPlayPolicy)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AdPlayPolicy::IsInitialized() const {
  return true;
}

void AdPlayPolicy::Swap(AdPlayPolicy* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AdPlayPolicy::InternalSwap(AdPlayPolicy* other) {
  adplays_.UnsafeArenaSwap(&other->adplays_);
  version_.Swap(&other->version_);
  datetime_.Swap(&other->datetime_);
  std::swap(id_, other->id_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AdPlayPolicy::GetMetadata() const {
  protobuf_AdPlayPolicy_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_AdPlayPolicy_2eproto::file_level_metadata[4];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AdPlayPolicy

// int32 id = 1;
void AdPlayPolicy::clear_id() {
  id_ = 0;
}
::google::protobuf::int32 AdPlayPolicy::id() const {
  // @@protoc_insertion_point(field_get:AdPlayPolicy.id)
  return id_;
}
void AdPlayPolicy::set_id(::google::protobuf::int32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:AdPlayPolicy.id)
}

// string version = 2;
void AdPlayPolicy::clear_version() {
  version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& AdPlayPolicy::version() const {
  // @@protoc_insertion_point(field_get:AdPlayPolicy.version)
  return version_.GetNoArena();
}
void AdPlayPolicy::set_version(const ::std::string& value) {
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:AdPlayPolicy.version)
}
#if LANG_CXX11
void AdPlayPolicy::set_version(::std::string&& value) {
  
  version_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:AdPlayPolicy.version)
}
#endif
void AdPlayPolicy::set_version(const char* value) {
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:AdPlayPolicy.version)
}
void AdPlayPolicy::set_version(const char* value, size_t size) {
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:AdPlayPolicy.version)
}
::std::string* AdPlayPolicy::mutable_version() {
  
  // @@protoc_insertion_point(field_mutable:AdPlayPolicy.version)
  return version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AdPlayPolicy::release_version() {
  // @@protoc_insertion_point(field_release:AdPlayPolicy.version)
  
  return version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AdPlayPolicy::set_allocated_version(::std::string* version) {
  if (version != NULL) {
    
  } else {
    
  }
  version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), version);
  // @@protoc_insertion_point(field_set_allocated:AdPlayPolicy.version)
}

// string dateTime = 3;
void AdPlayPolicy::clear_datetime() {
  datetime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& AdPlayPolicy::datetime() const {
  // @@protoc_insertion_point(field_get:AdPlayPolicy.dateTime)
  return datetime_.GetNoArena();
}
void AdPlayPolicy::set_datetime(const ::std::string& value) {
  
  datetime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:AdPlayPolicy.dateTime)
}
#if LANG_CXX11
void AdPlayPolicy::set_datetime(::std::string&& value) {
  
  datetime_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:AdPlayPolicy.dateTime)
}
#endif
void AdPlayPolicy::set_datetime(const char* value) {
  
  datetime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:AdPlayPolicy.dateTime)
}
void AdPlayPolicy::set_datetime(const char* value, size_t size) {
  
  datetime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:AdPlayPolicy.dateTime)
}
::std::string* AdPlayPolicy::mutable_datetime() {
  
  // @@protoc_insertion_point(field_mutable:AdPlayPolicy.dateTime)
  return datetime_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AdPlayPolicy::release_datetime() {
  // @@protoc_insertion_point(field_release:AdPlayPolicy.dateTime)
  
  return datetime_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AdPlayPolicy::set_allocated_datetime(::std::string* datetime) {
  if (datetime != NULL) {
    
  } else {
    
  }
  datetime_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), datetime);
  // @@protoc_insertion_point(field_set_allocated:AdPlayPolicy.dateTime)
}

// repeated .AdPlayPolicy.AdPlay adPlays = 4;
int AdPlayPolicy::adplays_size() const {
  return adplays_.size();
}
void AdPlayPolicy::clear_adplays() {
  adplays_.Clear();
}
const ::AdPlayPolicy_AdPlay& AdPlayPolicy::adplays(int index) const {
  // @@protoc_insertion_point(field_get:AdPlayPolicy.adPlays)
  return adplays_.Get(index);
}
::AdPlayPolicy_AdPlay* AdPlayPolicy::mutable_adplays(int index) {
  // @@protoc_insertion_point(field_mutable:AdPlayPolicy.adPlays)
  return adplays_.Mutable(index);
}
::AdPlayPolicy_AdPlay* AdPlayPolicy::add_adplays() {
  // @@protoc_insertion_point(field_add:AdPlayPolicy.adPlays)
  return adplays_.Add();
}
::google::protobuf::RepeatedPtrField< ::AdPlayPolicy_AdPlay >*
AdPlayPolicy::mutable_adplays() {
  // @@protoc_insertion_point(field_mutable_list:AdPlayPolicy.adPlays)
  return &adplays_;
}
const ::google::protobuf::RepeatedPtrField< ::AdPlayPolicy_AdPlay >&
AdPlayPolicy::adplays() const {
  // @@protoc_insertion_point(field_list:AdPlayPolicy.adPlays)
  return adplays_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
